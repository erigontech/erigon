GO=go # if using docker, should not need to be installed/linked
GOBIN=$(CURDIR)/build/bin
UNAME=$(shell uname) # Supported: Darwin, Linux
DOCKER=$(shell command -v docker 2> /dev/null)

GIT_COMMIT=$(shell git rev-list -1 HEAD)
GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
GIT_TAG=$(shell git describe --tags '--match=v*' --dirty)
ERIGON_USER=erigon
# if using volume-mounting data dir, then must exist on host OS
DOCKER_UID=$(shell id -u)
DOCKER_GID=$(shell id -g)
DOCKER_TAG=thorax/erigon:latest

# Variables below for building on host OS, and are ignored for docker
#
# Pipe error below to /dev/null since Makefile structure kind of expects
# Go to be available, but with docker it's not strictly necessary
CGO_CFLAGS+=$(shell $(GO) env CGO_CFLAGS 2>/dev/null) # don't lose default
CGO_CFLAGS+= -DMDBX_FORCE_ASSERTIONS=0 # Enable MDBX's asserts by default in 'devel' branch and disable in releases
#CGO_CFLAGS+= -DMDBX_DISABLE_VALIDATION=1 # This feature is not ready yet
#CGO_CFLAGS+= -DMDBX_ENABLE_PROFGC=0 # Disabled by default, but may be useful for performance debugging
#CGO_CFLAGS+= -DMDBX_ENABLE_PGOP_STAT=0 # Disabled by default, but may be useful for performance debugging
#CGO_CFLAGS+= -DMDBX_ENV_CHECKPID=0 # Erigon doesn't do fork() syscall
CGO_CFLAGS+=-O
CGO_CFLAGS+=-D__BLST_PORTABLE__
CGO_CFLAGS+=-Wno-error=strict-prototypes # for Clang15, remove it when can https://github.com/ledgerwatch/erigon/issues/6113#issuecomment-1359526277
DBG_CGO_CFLAGS+=-DMDBX_DEBUG=1

BUILD_TAGS=nosqlite,noboltdb
PACKAGE=github.com/ledgerwatch/erigon

GO_FLAGS+=-trimpath -tags $(BUILD_TAGS) -buildvcs=false
GO_FLAGS+=-ldflags "-X ${PACKAGE}/params.GitCommit=${GIT_COMMIT} -X ${PACKAGE}/params.GitBranch=${GIT_BRANCH} -X ${PACKAGE}/params.GitTag=${GIT_TAG}"

GOBUILD=CGO_FLAGS="$(CGO_CFLAGS)" $(GO) build $(GO_FLAGS)
GO_DBG_BUILD=$(GO) build $(GO_FLAGS) -tags $(BUILD_TAGS),debug -gcflags=all="-N -l"  # see delve docs
GOTEST=$(CGO_CFLAGS) GODEBUG=cgocheck=0 $(GO) test $(GO_FLAGS) ./... -p 2

# since DOCKER_UID, DOCKER_GID are default initialized to the current user uid/gid,
# we need separate envvars to facilitate creation of the erigon user on the host OS.
# ERIGON_USER_UID ?= 3473
# ERIGON_USER_GID ?= 3473
# ERIGON_USER_XDG_DATA_HOME ?= ~$(ERIGON_USER)/.local/share

PACKAGE_NAME=github.com/ledgerwatch/erigon
GOLANG_CROSS_VERSION=v1.19.5