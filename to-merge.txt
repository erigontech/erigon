commit 6d74d1e5f762e06a6a739a42261886510f842778
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed May 13 12:31:35 2020 +0300

    params: release go-ethereum v1.9.14

commit a188a1e150ecc917d85631f9e1308712ff55bd5d
Author: Hao Duan <duanhao0814@gmail.com>
Date:   Wed May 13 17:06:19 2020 +0800

    ethstats: stop report ticker in each loop cycle #21070 (#21071)
    
    Co-authored-by: Hao Duan <duan.hao@hyperchain.cn>

commit d02301f758df1d16875c959b58cf91c76edecbdd
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Wed May 13 16:33:48 2020 +0800

    core: fix missing receipt on Clique crashes (#21045)
    
    * core: fix missing receipt
    
    * core: address comment

commit 0b63915430e5921722004345228c5239a8784d6b
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Tue May 12 13:02:23 2020 +0200

    accounts/abi: allow overloaded argument names (#21060)
    
    * accounts/abi: allow overloaded argument names
    
    In solidity it is possible to create the following contract:
    ```
    contract Overloader {
        struct F { uint _f; uint __f; uint f; }
        function f(F memory f) public {}
    }
    ```
    This however resulted in a panic in the abi package.
    
    * accounts/abi fixed error handling

commit b8ea9042e52f7bb59c0c0c9e7df37d4f2f579dd2
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Tue May 12 12:21:40 2020 +0200

    accounts/abi: accounts/abi/bind: Move topics to abi package (#21057)
    
    * accounts/abi/bind: added test cases for waitDeployed
    
    * accounts/abi/bind: added test case for boundContract
    
    * accounts/abi/bind: removed unnecessary resolve methods
    
    * accounts/abi: moved topics from /bind to /abi
    
    * accounts/abi/bind: cleaned up format... functions
    
    * accounts/abi: improved log message
    
    * accounts/abi: added type tests
    
    * accounts/abi/bind: remove superfluous template methods

commit 7b7e5921a4012810707aaf825080c70ef6823768
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Tue May 12 18:11:34 2020 +0800

    miner: support disabling empty blockprecommits form the Go API (#20736)
    
    * cmd, miner: add noempty-precommit flag
    
    * cmd, miner: get rid of external flag
    
    * miner: change bool to atomic int
    
    * miner: fix tiny typo
    
    Co-authored-by: Péter Szilágyi <peterke@gmail.com>

commit 7540c53e72f2974a0c5509274412c2bf65dd1ab9
Author: ucwong <ucwong@126.com>
Date:   Tue May 12 17:19:15 2020 +0800

    core/rawdb: remove unused math (#21065)

commit aaede53738fac7767459dc2a854136ac6680e5b2
Author: ucwong <ucwong@126.com>
Date:   Tue May 12 16:46:35 2020 +0800

    core/rawdb : log format fix for Unindexing transaction (#21064)
    
    * core/rawdb : log format fix for Unindexing transaction
    
    * core/rawdb: tiny fixup
    
    Co-authored-by: Péter Szilágyi <peterke@gmail.com>

commit 53cac027d0795a66097c753495a8609e545822ba
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Tue May 12 16:02:15 2020 +0800

    les: drop the message if the entire p2p connection is stuck (#21033)
    
    * les: drop the message if the entire p2p connection is stuck
    
    * les: fix lint

commit 7ace5a3a8b2a4591063096232a3a1264e3faf8fe
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue May 12 07:46:10 2020 +0200

    core: fixup blockchain tests (#21062)
    
    core: fixup blockchain tests

commit 40859a2441a91b120ce33b5f5ede95c8f7e7fd97
Merge: 453523005 126ac94f3
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon May 11 19:05:47 2020 +0300

    Merge pull request #21061 from karalabe/cht-1.9.14
    
    params: bump CHTs for the v1.9.14 release

commit 45352300592cf68feb64d67aefa607eec2c9a1de
Author: Martin Holst Swende <martin@swende.se>
Date:   Mon May 11 17:58:43 2020 +0200

    cmd, core, eth: background transaction indexing (#20302)
    
    * cmd, core, eth: init tx lookup in background
    
    * core/rawdb: tiny log fixes to make it clearer what's happening
    
    * core, eth: fix rebase errors
    
    * core/rawdb: make reindexing less generic, but more optimal
    
    * rlp: implement rlp list iterator
    
    * core/rawdb: new implementation of tx indexing/unindex using generic tx iterator and hashing rlp-data
    
    * core/rawdb, cmd/utils: fix review concerns
    
    * cmd/utils: fix merge issue
    
    * core/rawdb: add some log formatting polishes
    
    Co-authored-by: rjl493456442 <garyrong0905@gmail.com>
    Co-authored-by: Péter Szilágyi <peterke@gmail.com>

commit 126ac94f369e56a4da879aaa8914afef6a8a64b2
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon May 11 18:56:09 2020 +0300

    params: bump CHTs for the v1.9.14 release

commit 6f54ae24cdeacd14519eac8b127e0e1fea03d66a
Author: Felix Lange <fjl@twurst.com>
Date:   Mon May 11 17:11:17 2020 +0200

    p2p: add 0 port check in dialer  (#21008)
    
    * p2p: add low port check in dialer
    
    We already have a check like this for UDP ports, add a similar one in
    the dialer. This prevents dials to port zero and it's also an extra
    layer of protection against spamming HTTP servers.
    
    * p2p/discover: use errLowPort in v4 code
    
    * p2p: change port check
    
    * p2p: add comment
    
    * p2p/simulations/adapters: ensure assigned port is in all node records

commit 069a7e1f8abe4e06f7aba7bb1dbd5a49ce242a5a
Author: AusIV <git@ausiv.com>
Date:   Mon May 11 07:11:17 2020 -0500

    core/rawdb: stop freezer process as part of freezer.Close() (#21010)
    
    * core/rawdb: Stop freezer process as part of freezer.Close()
    
    When you call db.Close(), it was closing the leveldb database first,
    then closing the freezer, but never stopping the freezer process.
    This could cause the freezer to attempt to write to leveldb after
    leveldb had been closed, leading to a crash with a non-zero exit code.
    
    This change adds a quit channel to the freezer, and freezer.Close()
    will not return until the freezer process has stopped.
    
    Additionally, when you call freezerdb.Close(), it will close the
    AncientStore before closing leveldb, to ensure that the freezer goroutine
    will be stopped before leveldb is closed.
    
    * core/rawdb: Fix formatting for golint
    
    * core/rawdb: Use backoff flag to avoid repeating select
    
    * core/rawdb: Include accidentally omitted backoff