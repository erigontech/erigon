// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ledgerwatch/erigon/cl/phase1/core/state (interfaces: BeaconStateReader)
//
// Generated by this command:
//
//	mockgen -destination=./mock_services/beacon_state_reader_mock.go -package=mock_services . BeaconStateReader
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	common "github.com/ledgerwatch/erigon-lib/common"
	gomock "go.uber.org/mock/gomock"
)

// MockBeaconStateReader is a mock of BeaconStateReader interface.
type MockBeaconStateReader struct {
	ctrl     *gomock.Controller
	recorder *MockBeaconStateReaderMockRecorder
}

// MockBeaconStateReaderMockRecorder is the mock recorder for MockBeaconStateReader.
type MockBeaconStateReaderMockRecorder struct {
	mock *MockBeaconStateReader
}

// NewMockBeaconStateReader creates a new mock instance.
func NewMockBeaconStateReader(ctrl *gomock.Controller) *MockBeaconStateReader {
	mock := &MockBeaconStateReader{ctrl: ctrl}
	mock.recorder = &MockBeaconStateReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBeaconStateReader) EXPECT() *MockBeaconStateReaderMockRecorder {
	return m.recorder
}

// CommitteeCount mocks base method.
func (m *MockBeaconStateReader) CommitteeCount(arg0 uint64) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitteeCount", arg0)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// CommitteeCount indicates an expected call of CommitteeCount.
func (mr *MockBeaconStateReaderMockRecorder) CommitteeCount(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitteeCount", reflect.TypeOf((*MockBeaconStateReader)(nil).CommitteeCount), arg0)
}

// GetDomain mocks base method.
func (m *MockBeaconStateReader) GetDomain(arg0 [4]byte, arg1 uint64) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomain", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomain indicates an expected call of GetDomain.
func (mr *MockBeaconStateReaderMockRecorder) GetDomain(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockBeaconStateReader)(nil).GetDomain), arg0, arg1)
}

// ValidatorPublicKey mocks base method.
func (m *MockBeaconStateReader) ValidatorPublicKey(arg0 int) (common.Bytes48, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatorPublicKey", arg0)
	ret0, _ := ret[0].(common.Bytes48)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidatorPublicKey indicates an expected call of ValidatorPublicKey.
func (mr *MockBeaconStateReaderMockRecorder) ValidatorPublicKey(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatorPublicKey", reflect.TypeOf((*MockBeaconStateReader)(nil).ValidatorPublicKey), arg0)
}
