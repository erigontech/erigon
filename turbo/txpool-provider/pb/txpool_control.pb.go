// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: txpool_control.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Account   []byte `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountInfoRequest) Reset() {
	*x = AccountInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfoRequest) ProtoMessage() {}

func (x *AccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfoRequest.ProtoReflect.Descriptor instead.
func (*AccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{0}
}

func (x *AccountInfoRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *AccountInfoRequest) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

type AccountInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance []byte `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce   []byte `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *AccountInfoReply) Reset() {
	*x = AccountInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfoReply) ProtoMessage() {}

func (x *AccountInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfoReply.ProtoReflect.Descriptor instead.
func (*AccountInfoReply) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{1}
}

func (x *AccountInfoReply) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AccountInfoReply) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type BlockStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StartWith:
	//	*BlockStreamRequest_Latest
	//	*BlockStreamRequest_BlockHash
	StartWith isBlockStreamRequest_StartWith `protobuf_oneof:"start_with"`
}

func (x *BlockStreamRequest) Reset() {
	*x = BlockStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStreamRequest) ProtoMessage() {}

func (x *BlockStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStreamRequest.ProtoReflect.Descriptor instead.
func (*BlockStreamRequest) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{2}
}

func (m *BlockStreamRequest) GetStartWith() isBlockStreamRequest_StartWith {
	if m != nil {
		return m.StartWith
	}
	return nil
}

func (x *BlockStreamRequest) GetLatest() *empty.Empty {
	if x, ok := x.GetStartWith().(*BlockStreamRequest_Latest); ok {
		return x.Latest
	}
	return nil
}

func (x *BlockStreamRequest) GetBlockHash() []byte {
	if x, ok := x.GetStartWith().(*BlockStreamRequest_BlockHash); ok {
		return x.BlockHash
	}
	return nil
}

type isBlockStreamRequest_StartWith interface {
	isBlockStreamRequest_StartWith()
}

type BlockStreamRequest_Latest struct {
	Latest *empty.Empty `protobuf:"bytes,1,opt,name=latest,proto3,oneof"`
}

type BlockStreamRequest_BlockHash struct {
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3,oneof"`
}

func (*BlockStreamRequest_Latest) isBlockStreamRequest_StartWith() {}

func (*BlockStreamRequest_BlockHash) isBlockStreamRequest_StartWith() {}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance []byte `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce   []byte `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{3}
}

func (x *AccountInfo) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AccountInfo) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AccountInfo) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type AccountDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Diff:
	//	*AccountDiff_Changed
	//	*AccountDiff_Deleted
	Diff isAccountDiff_Diff `protobuf_oneof:"diff"`
}

func (x *AccountDiff) Reset() {
	*x = AccountDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDiff) ProtoMessage() {}

func (x *AccountDiff) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDiff.ProtoReflect.Descriptor instead.
func (*AccountDiff) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{4}
}

func (m *AccountDiff) GetDiff() isAccountDiff_Diff {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (x *AccountDiff) GetChanged() *AccountInfo {
	if x, ok := x.GetDiff().(*AccountDiff_Changed); ok {
		return x.Changed
	}
	return nil
}

func (x *AccountDiff) GetDeleted() []byte {
	if x, ok := x.GetDiff().(*AccountDiff_Deleted); ok {
		return x.Deleted
	}
	return nil
}

type isAccountDiff_Diff interface {
	isAccountDiff_Diff()
}

type AccountDiff_Changed struct {
	Changed *AccountInfo `protobuf:"bytes,1,opt,name=changed,proto3,oneof"`
}

type AccountDiff_Deleted struct {
	Deleted []byte `protobuf:"bytes,2,opt,name=deleted,proto3,oneof"`
}

func (*AccountDiff_Changed) isAccountDiff_Diff() {}

func (*AccountDiff_Deleted) isAccountDiff_Diff() {}

type AppliedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash         []byte         `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ParentHash   []byte         `protobuf:"bytes,2,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	AccountDiffs []*AccountDiff `protobuf:"bytes,3,rep,name=account_diffs,json=accountDiffs,proto3" json:"account_diffs,omitempty"`
}

func (x *AppliedBlock) Reset() {
	*x = AppliedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedBlock) ProtoMessage() {}

func (x *AppliedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedBlock.ProtoReflect.Descriptor instead.
func (*AppliedBlock) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{5}
}

func (x *AppliedBlock) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *AppliedBlock) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *AppliedBlock) GetAccountDiffs() []*AccountDiff {
	if x != nil {
		return x.AccountDiffs
	}
	return nil
}

type RevertedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevertedHash         []byte         `protobuf:"bytes,1,opt,name=reverted_hash,json=revertedHash,proto3" json:"reverted_hash,omitempty"`
	RevertedTransactions [][]byte       `protobuf:"bytes,2,rep,name=reverted_transactions,json=revertedTransactions,proto3" json:"reverted_transactions,omitempty"`
	NewHash              []byte         `protobuf:"bytes,3,opt,name=new_hash,json=newHash,proto3" json:"new_hash,omitempty"`
	NewParent            []byte         `protobuf:"bytes,4,opt,name=new_parent,json=newParent,proto3" json:"new_parent,omitempty"`
	NewState             []*AccountDiff `protobuf:"bytes,5,rep,name=new_state,json=newState,proto3" json:"new_state,omitempty"`
}

func (x *RevertedBlock) Reset() {
	*x = RevertedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertedBlock) ProtoMessage() {}

func (x *RevertedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertedBlock.ProtoReflect.Descriptor instead.
func (*RevertedBlock) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{6}
}

func (x *RevertedBlock) GetRevertedHash() []byte {
	if x != nil {
		return x.RevertedHash
	}
	return nil
}

func (x *RevertedBlock) GetRevertedTransactions() [][]byte {
	if x != nil {
		return x.RevertedTransactions
	}
	return nil
}

func (x *RevertedBlock) GetNewHash() []byte {
	if x != nil {
		return x.NewHash
	}
	return nil
}

func (x *RevertedBlock) GetNewParent() []byte {
	if x != nil {
		return x.NewParent
	}
	return nil
}

func (x *RevertedBlock) GetNewState() []*AccountDiff {
	if x != nil {
		return x.NewState
	}
	return nil
}

type BlockDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Diff:
	//	*BlockDiff_Applied
	//	*BlockDiff_Reverted
	Diff isBlockDiff_Diff `protobuf_oneof:"diff"`
}

func (x *BlockDiff) Reset() {
	*x = BlockDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txpool_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDiff) ProtoMessage() {}

func (x *BlockDiff) ProtoReflect() protoreflect.Message {
	mi := &file_txpool_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDiff.ProtoReflect.Descriptor instead.
func (*BlockDiff) Descriptor() ([]byte, []int) {
	return file_txpool_control_proto_rawDescGZIP(), []int{7}
}

func (m *BlockDiff) GetDiff() isBlockDiff_Diff {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (x *BlockDiff) GetApplied() *AppliedBlock {
	if x, ok := x.GetDiff().(*BlockDiff_Applied); ok {
		return x.Applied
	}
	return nil
}

func (x *BlockDiff) GetReverted() *RevertedBlock {
	if x, ok := x.GetDiff().(*BlockDiff_Reverted); ok {
		return x.Reverted
	}
	return nil
}

type isBlockDiff_Diff interface {
	isBlockDiff_Diff()
}

type BlockDiff_Applied struct {
	Applied *AppliedBlock `protobuf:"bytes,1,opt,name=applied,proto3,oneof"`
}

type BlockDiff_Reverted struct {
	Reverted *RevertedBlock `protobuf:"bytes,2,opt,name=reverted,proto3,oneof"`
}

func (*BlockDiff_Applied) isBlockDiff_Diff() {}

func (*BlockDiff_Reverted) isBlockDiff_Diff() {}

var File_txpool_control_proto protoreflect.FileDescriptor

var file_txpool_control_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x0c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x22, 0x57, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x6a, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x69, 0x66, 0x66, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x69,
	0x66, 0x66, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x14, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x66, 0x66, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x78, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x32, 0xb4, 0x01, 0x0a, 0x0d, 0x54, 0x78, 0x70, 0x6f,
	0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x53, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74,
	0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e,
	0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x74, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x66, 0x66, 0x30, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_txpool_control_proto_rawDescOnce sync.Once
	file_txpool_control_proto_rawDescData = file_txpool_control_proto_rawDesc
)

func file_txpool_control_proto_rawDescGZIP() []byte {
	file_txpool_control_proto_rawDescOnce.Do(func() {
		file_txpool_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_txpool_control_proto_rawDescData)
	})
	return file_txpool_control_proto_rawDescData
}

var file_txpool_control_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_txpool_control_proto_goTypes = []interface{}{
	(*AccountInfoRequest)(nil), // 0: txpool_control.AccountInfoRequest
	(*AccountInfoReply)(nil),   // 1: txpool_control.AccountInfoReply
	(*BlockStreamRequest)(nil), // 2: txpool_control.BlockStreamRequest
	(*AccountInfo)(nil),        // 3: txpool_control.AccountInfo
	(*AccountDiff)(nil),        // 4: txpool_control.AccountDiff
	(*AppliedBlock)(nil),       // 5: txpool_control.AppliedBlock
	(*RevertedBlock)(nil),      // 6: txpool_control.RevertedBlock
	(*BlockDiff)(nil),          // 7: txpool_control.BlockDiff
	(*empty.Empty)(nil),        // 8: google.protobuf.Empty
}
var file_txpool_control_proto_depIdxs = []int32{
	8, // 0: txpool_control.BlockStreamRequest.latest:type_name -> google.protobuf.Empty
	3, // 1: txpool_control.AccountDiff.changed:type_name -> txpool_control.AccountInfo
	4, // 2: txpool_control.AppliedBlock.account_diffs:type_name -> txpool_control.AccountDiff
	4, // 3: txpool_control.RevertedBlock.new_state:type_name -> txpool_control.AccountDiff
	5, // 4: txpool_control.BlockDiff.applied:type_name -> txpool_control.AppliedBlock
	6, // 5: txpool_control.BlockDiff.reverted:type_name -> txpool_control.RevertedBlock
	0, // 6: txpool_control.TxpoolControl.AccountInfo:input_type -> txpool_control.AccountInfoRequest
	2, // 7: txpool_control.TxpoolControl.BlockStream:input_type -> txpool_control.BlockStreamRequest
	1, // 8: txpool_control.TxpoolControl.AccountInfo:output_type -> txpool_control.AccountInfoReply
	7, // 9: txpool_control.TxpoolControl.BlockStream:output_type -> txpool_control.BlockDiff
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_txpool_control_proto_init() }
func file_txpool_control_proto_init() {
	if File_txpool_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_txpool_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_txpool_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_txpool_control_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BlockStreamRequest_Latest)(nil),
		(*BlockStreamRequest_BlockHash)(nil),
	}
	file_txpool_control_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AccountDiff_Changed)(nil),
		(*AccountDiff_Deleted)(nil),
	}
	file_txpool_control_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*BlockDiff_Applied)(nil),
		(*BlockDiff_Reverted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_txpool_control_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_txpool_control_proto_goTypes,
		DependencyIndexes: file_txpool_control_proto_depIdxs,
		MessageInfos:      file_txpool_control_proto_msgTypes,
	}.Build()
	File_txpool_control_proto = out.File
	file_txpool_control_proto_rawDesc = nil
	file_txpool_control_proto_goTypes = nil
	file_txpool_control_proto_depIdxs = nil
}
