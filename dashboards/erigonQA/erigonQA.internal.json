{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 66,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 5,
      "panels": [],
      "title": "Tip Tracking - Ethereum",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "min",
                "value": -100
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#f6001d",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'failure': { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%(2.60)"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total-sync-time_%"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 68,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.60\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%(2.60)\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%(2.60)\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.60\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%(2.60)': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%(2.60)': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.60\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.60\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.61\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.61\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.61\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.61\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "C"
        }
      ],
      "title": "Sync time & dir size (release/2.60-2.61)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: \"failure\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Per block size (main)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 69,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.60\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb(2.60)\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.60\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb(2.60)': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.60\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.60\",\n            outcome: \"failure\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.61\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.61\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])",
          "queryType": "query",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"release/2.61\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"release/2.61\",\n            outcome: \"failure\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "C"
        }
      ],
      "title": "Per block size (release/2.60-2.61)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 67,
      "panels": [],
      "title": "Tip Tracking - Gnosis",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total-sync-time_%"
            },
            "properties": [
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 18
      },
      "id": 78,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%(2.60)"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total-sync-time_%(2.60)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 200
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total-sync-time_%"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 200
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "left"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "total-sync-time_%"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 18
      },
      "id": 56,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.60\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%(2.60)\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%(2.60)\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.60\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%(2.60)': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%(2.60)': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.60\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.60\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.61\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.61\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.61\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.61\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "C"
        }
      ],
      "title": "Sync time & dir size (release/2.60-2.61)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 26
      },
      "id": 79,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Per block size (main)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 26
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.60\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb(2.60)\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.60\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb(2.60)': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.60\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.60\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.61\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.61\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"gnosis\",\"branch\":\"release/2.61\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"gnosis\",\n            branch: \"release/2.61\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "C"
        }
      ],
      "title": "Per block size (release/2.60-2.61)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 34
      },
      "id": 80,
      "panels": [],
      "title": "Tip Tracking - Polygon",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#f6001d",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 35
      },
      "id": 81,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"bor-mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"bor-mainnet\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"tip-tracking\",\"repo\":\"erigon\",\"chain\":\"bor-mainnet\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"tip-tracking\",\n            repo: \"erigon\",\n            chain: \"bor-mainnet\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'failure': { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 70,
      "panels": [],
      "title": "Sync from scratch - mainnet (minimal node)",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 44
      },
      "id": 65,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch-minimal-node\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch-minimal-node\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main branch)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-mongodb-datasource",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "h"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 8
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 44
      },
      "id": 73,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"time_difference_hours\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch-minimal-node\",\n      repo: \"erigon\",\n      chain: \"mainnet\",\n      branch: \"main\",\n      outcome: { $ne: \"failure\" },\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'time_difference_hours': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000 \n                ]\n              },\n              2 \n            ]\n          },\n          0 \n        ]\n      }\n    }\n  }\n])",
          "queryType": "query",
          "refId": "DATA"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"failure\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}},{\"$match\":{\"failure\":0}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch-minimal-node\",\n      repo: \"erigon\",\n      chain: \"mainnet\",\n      branch: \"main\"\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'failure': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000\n                ]\n              },\n              2\n            ]\n          },\n          0\n        ]\n      }\n    }\n  },\n  {\n    $match: {\n      'failure': 0\n    }\n  }\n])",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Time to the tip",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 52
      },
      "id": 66,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch-minimal-node\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch-minimal-node\",\"repo\":\"erigon\",\"chain\":\"mainnet\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch-minimal-node\",\n            repo: \"erigon\",\n            chain: \"mainnet\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Per block size (main branch)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 60
      },
      "id": 64,
      "panels": [],
      "title": "Sync from scratch - Holesky",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total-sync-time_%"
            },
            "properties": [
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 61
      },
      "id": 71,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"holesky\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"holesky\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main branch)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-mongodb-datasource",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "h"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 8
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 61
      },
      "id": 74,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"time_difference_hours\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"holesky\",\n      branch: \"main\",\n      outcome: { $ne: \"failure\" },\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'time_difference_hours': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000 \n                ]\n              },\n              2 \n            ]\n          },\n          0 \n        ]\n      }\n    }\n  }\n])",
          "queryType": "query",
          "refId": "DATA"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"failure\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}},{\"$match\":{\"failure\":0}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"holesky\",\n      branch: \"main\"\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'failure': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000\n                ]\n              },\n              2\n            ]\n          },\n          0\n        ]\n      }\n    }\n  },\n  {\n    $match: {\n      'failure': 0\n    }\n  }\n])",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Time to the tip",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 69
      },
      "id": 72,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"holesky\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" } ,\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"holesky\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"holesky\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Per block size (main branch)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 77
      },
      "id": 59,
      "panels": [],
      "title": "Sync from scratch - Sepolia",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 78
      },
      "id": 60,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"sepolia\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"sepolia\",\n            branch: \"main\",\n            outcome: \"failure\",\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Sync time & dir size (main branch)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-mongodb-datasource",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "h"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 8
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 78
      },
      "id": 75,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"time_difference_hours\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"sepolia\",\n      branch: \"main\",\n      outcome: { $ne: \"failure\" },\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'time_difference_hours': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000 \n                ]\n              },\n              2 \n            ]\n          },\n          0 \n        ]\n      }\n    }\n  }\n])",
          "queryType": "query",
          "refId": "DATA"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"failure\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}},{\"$match\":{\"failure\":0}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"sepolia\",\n      branch: \"main\"\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'failure': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000\n                ]\n              },\n              2\n            ]\n          },\n          0\n        ]\n      }\n    }\n  },\n  {\n    $match: {\n      'failure': 0\n    }\n  }\n])",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Time to the tip",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 86
      },
      "id": 62,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"sepolia\",\n            branch: \"main\",\n            outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"sepolia\",\"branch\":\"main\",\"outcome\":\"failure\"}},{\"$project\":{\"date\":1,\"failure\":{\"$literal\":0}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"sepolia\",\n            branch: \"main\",\n            outcome: \"failure\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            failure: { $literal: 0 },\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Per block size (main branch)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 94
      },
      "id": 54,
      "panels": [],
      "title": "Sync from scratch - Amoy",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dir-size-increment_%"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisSoftMin",
                "value": -100
              },
              {
                "id": "custom.axisSoftMax",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 95
      },
      "id": 55,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"amoy\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"total-sync-time_%\":\"$results.measures.total-sync-time_%\",\"dir-size-increment_%\":\"$results.measures.dir-size-increment_%\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"amoy\",\n            branch: \"main\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'total-sync-time_%': '$results.measures.total-sync-time_%',\n            'dir-size-increment_%': '$results.measures.dir-size-increment_%'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Sync time & dir size (main)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-mongodb-datasource",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "h"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 8
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 95
      },
      "id": 76,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"amoy\",\"branch\":\"main\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"time_difference_hours\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"amoy\",\n      branch: \"main\",\n      outcome: { $ne: \"failure\" },\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'time_difference_hours': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000 \n                ]\n              },\n              2 \n            ]\n          },\n          0 \n        ]\n      }\n    }\n  }\n])",
          "queryType": "query",
          "refId": "DATA"
        },
        {
          "datasource": {
            "type": "grafana-mongodb-datasource",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"amoy\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"failure\":{\"$ifNull\":[{\"$round\":[{\"$divide\":[{\"$subtract\":[{\"$dateFromString\":{\"dateString\":\"$results.measures.sync-start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}},{\"$dateFromString\":{\"dateString\":\"$results.measures.start-time\",\"format\":\"%Y-%m-%d %H:%M:%S\"}}]},3600000]},2]},0]}}},{\"$match\":{\"failure\":0}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n  {\n    $match: {\n      test: \"sync-from-scratch\",\n      repo: \"erigon\",\n      chain: \"amoy\",\n      branch: \"main\"\n    }\n  },\n  {\n    $project: {\n      date: 1,\n      'failure': {\n        $ifNull: [\n          {\n            $round: [\n              {\n                $divide: [\n                  { $subtract: [\n                    { $dateFromString: { dateString: \"$results.measures.sync-start-time\", format: \"%Y-%m-%d %H:%M:%S\" } },\n                    { $dateFromString: { dateString: \"$results.measures.start-time\", format: \"%Y-%m-%d %H:%M:%S\" } }\n                  ] },\n                  3600000\n                ]\n              },\n              2\n            ]\n          },\n          0\n        ]\n      }\n    }\n  },\n  {\n    $match: {\n      'failure': 0\n    }\n  }\n])",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "Time to the tip",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 103
      },
      "id": 57,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"sync-from-scratch\",\"repo\":\"erigon\",\"chain\":\"amoy\",\"branch\":\"main\"}},{\"$project\":{\"date\":1,\"per-block-size-increment_mb\":\"$results.measures.per-block-size-increment_mb\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            test: \"sync-from-scratch\",\n            repo: \"erigon\",\n            chain: \"amoy\",\n            branch: \"main\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            'per-block-size-increment_mb': '$results.measures.per-block-size-increment_mb'\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Per block size (main)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 111
      },
      "id": 47,
      "panels": [],
      "title": "Snap Download",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "blocks_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#980fdc",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "snapshots"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "state_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#dca1ed",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "other snapshots"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 112
      },
      "id": 48,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"main\",\"chain\":\"mainnet\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"indexing-time_m\":{\"$ifNull\":[\"$results.measures.indexing-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"total_download-time_m\":1,\"indexing-time_m\":1}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"main\",\n          chain: \"mainnet\",\n          outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            \"indexing-time_m\": {\n                $ifNull: [\"$results.measures.indexing-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": 1,\n            \"indexing-time_m\": 1,\n            // blocks_snapshots: 1,\n            // rest_snapshots: 1,            \n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "download time per snapshot"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"main\",\"chain\":\"mainnet\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"blocks_snapshots\":\"$results.measures.blocks-snapshots\",\"state_snapshots\":\"$results.measures.rest-snapshots\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"main\",\n          chain: \"mainnet\",\n          outcome: { $ne: \"failure\" },  \n        }\n    },\n    {\n        $project: {\n            date: 1,\n            blocks_snapshots: \"$results.measures.blocks-snapshots\",\n            state_snapshots: \"$results.measures.rest-snapshots\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"outcome\":\"failure\",\"branch\":\"main\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"failure\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          outcome: \"failure\",\n          branch: \"main\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"failure\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "download time - branch main",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "blocks_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "displayName",
                "value": "snapshots"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "state_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 112
      },
      "id": 53,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"release/2.60\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"total_download-time_m\":1,\"avg download time\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"release/2.60\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": 1,\n            // blocks_snapshots: 1,\n            // rest_snapshots: 1,\n            \"avg download time\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "\"total_download-time_m\" /  (\"blocks-snapshots\" + \"rest-snapshots\")"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"release/2.60\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"blocks_snapshots\":\"$results.measures.blocks-snapshots\",\"state_snapshots\":\"$results.measures.rest-snapshots\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"release/2.60\",\n          chain: \"mainnet\"  \n        }\n    },\n    {\n        $project: {\n            date: 1,\n            blocks_snapshots: \"$results.measures.blocks-snapshots\",\n            state_snapshots: \"$results.measures.rest-snapshots\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "block-snapshot - rest-snapshots"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"outcome\":\"failure\",\"branch\":\"release/2.60\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"failure\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          outcome: \"failure\",\n          branch: \"release/2.60\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"failure\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "download time - branch release/2.60",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 123
      },
      "id": 77,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"main\",\"chain\":\"mainnet\",\"outcome\":{\"$ne\":\"failure\"}}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"indexing-time_m\":{\"$ifNull\":[\"$results.measures.indexing-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"download time x snap\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}},\"indexing time x snap\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$indexing-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$indexing-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"main\",\n          chain: \"mainnet\",\n          outcome: { $ne: \"failure\" },\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            \"indexing-time_m\": {\n                $ifNull: [\"$results.measures.indexing-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"download time x snap\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            },\n            \"indexing time x snap\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$indexing-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$indexing-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])",
          "queryType": "query",
          "refId": "download time per snapshot"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"outcome\":\"failure\",\"branch\":\"main\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"failure\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          outcome: \"failure\",\n          branch: \"main\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"failure\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "download time per snapshot - branch main",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "blocks_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "displayName",
                "value": "snapshots"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "state_snapshots"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 7
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 123
      },
      "id": 82,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"release/2.61\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"total_download-time_m\":1,\"avg download time\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"release/2.61\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": 1,\n            // blocks_snapshots: 1,\n            // rest_snapshots: 1,\n            \"avg download time\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "\"total_download-time_m\" /  (\"blocks-snapshots\" + \"rest-snapshots\")"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"branch\":\"release/2.61\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"blocks_snapshots\":\"$results.measures.blocks-snapshots\",\"state_snapshots\":\"$results.measures.rest-snapshots\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          branch: \"release/2.61\",\n          chain: \"mainnet\"  \n        }\n    },\n    {\n        $project: {\n            date: 1,\n            blocks_snapshots: \"$results.measures.blocks-snapshots\",\n            state_snapshots: \"$results.measures.rest-snapshots\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "block-snapshot - rest-snapshots"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"snap-download\",\"outcome\":\"failure\",\"branch\":\"release/2.61\",\"chain\":\"mainnet\"}},{\"$project\":{\"date\":1,\"total_download-time_m\":{\"$ifNull\":[\"$results.measures.total_download-time_m\",0]},\"blocks_snapshots\":{\"$ifNull\":[\"$results.measures.blocks-snapshots\",0]},\"rest_snapshots\":{\"$ifNull\":[\"$results.measures.rest-snapshots\",0]}}},{\"$project\":{\"date\":1,\"failure\":{\"$cond\":{\"if\":{\"$or\":[{\"$eq\":[{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]},0]},{\"$eq\":[\"$total_download-time_m\",0]}]},\"then\":0,\"else\":{\"$divide\":[\"$total_download-time_m\",{\"$add\":[\"$blocks_snapshots\",\"$rest_snapshots\"]}]}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"snap-download\",\n          outcome: \"failure\",\n          branch: \"release/2.61\",\n          chain: \"mainnet\"\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"total_download-time_m\": {\n                $ifNull: [\"$results.measures.total_download-time_m\", 0]\n            },\n            blocks_snapshots: {\n                $ifNull: [\"$results.measures.blocks-snapshots\", 0]\n            },\n            rest_snapshots: {\n                $ifNull: [\"$results.measures.rest-snapshots\", 0]\n            }\n        }\n    },\n    {\n        $project: {\n            date: 1,\n            \"failure\": {\n                $cond: {\n                    if: {\n                        $or: [\n                            { $eq: [{ $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }, 0] },\n                            { $eq: [\"$total_download-time_m\", 0] }\n                        ]\n                    },\n                    then: 0,\n                    else: { $divide: [\"$total_download-time_m\", { $add: [\"$blocks_snapshots\", \"$rest_snapshots\"] }] }\n                }\n            }\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "FAILURE"
        }
      ],
      "title": "download time - branch release/2.61",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 134
      },
      "id": 50,
      "panels": [],
      "title": "Clean exit",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 135
      },
      "id": 51,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"clean-exit-block-downloading\"}},{\"$project\":{\"outcome\":\"$results.outcome\",\"exit time\":{\"$ifNull\":[\"$results.measures.exit_time_secs\",0]},\"date\":\"$date\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"clean-exit-block-downloading\"      \n        }\n    },\n    {\n        $project: {\n            outcome: \"$results.outcome\",\n            \"exit time\": {\n                $ifNull: [\"$results.measures.exit_time_secs\", 0]\n            },\n            date: \"$date\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"clean-exit-block-downloading\",\"results.outcome\":\"FAILURE\"}},{\"$project\":{\"outcome\":\"$results.outcome\",\"failure\":{\"$ifNull\":[\"$results.measures.exit_time_secs\",0]},\"date\":\"$date\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"clean-exit-block-downloading\",\n          \"results.outcome\": \"FAILURE\",\n        }\n    },\n    {\n        $project: {\n            outcome: \"$results.outcome\",\n            \"failure\": {\n                $ifNull: [\"$results.measures.exit_time_secs\", 0]\n            },\n            date: \"$date\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        }
      ],
      "title": "Clean exit block downloading",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failure"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 135
      },
      "id": 52,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"clean-exit-snapshot-downloading\"}},{\"$project\":{\"outcome\":\"$results.outcome\",\"exit time\":{\"$ifNull\":[\"$results.measures.exit_time_secs\",0]},\"date\":\"$date\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"clean-exit-snapshot-downloading\"      \n        }\n    },\n    {\n        $project: {\n            outcome: \"$results.outcome\",\n            \"exit time\": {\n                $ifNull: [\"$results.measures.exit_time_secs\", 0]\n            },\n            date: \"$date\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "hide": false,
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"test\":\"clean-exit-snapshot-downloading\",\"results.outcome\":\"FAILURE\"}},{\"$project\":{\"outcome\":\"$results.outcome\",\"failure\":{\"$ifNull\":[\"$results.measures.exit_time_secs\",0]},\"date\":\"$date\"}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n          test: \"clean-exit-snapshot-downloading\",  \n          \"results.outcome\": \"FAILURE\",\n        }\n    },\n    {\n        $project: {\n            outcome: \"$results.outcome\",\n            \"failure\": {\n                $ifNull: [\"$results.measures.exit_time_secs\", 0]\n            },\n            date: \"$date\"\n        }\n    }\n])\n",
          "queryType": "query",
          "refId": "B"
        }
      ],
      "title": "Clean exit snapshot downloading",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 143
      },
      "id": 6,
      "panels": [],
      "title": "Silkworm - eth_call",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 144
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_call\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_call\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 1",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 144
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_call\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_call\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 100",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 152
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_call\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_call\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 1000",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 152
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_call\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_call\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 10000",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 160
      },
      "id": 11,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_call\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_call\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 20000",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 168
      },
      "id": 18,
      "panels": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8268
          },
          "id": 19,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getLogs\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getLogs\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8268
          },
          "id": 20,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getLogs\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getLogs\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 100",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8276
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getLogs\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getLogs\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8276
          },
          "id": 22,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getLogs\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getLogs\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 10000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8284
          },
          "id": 23,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getLogs\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getLogs\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 20000",
          "type": "timeseries"
        }
      ],
      "title": "Silkworm - eth_getLogs",
      "type": "row"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 169
      },
      "id": 13,
      "panels": [],
      "title": "Silkworm - eth_getBalance",
      "type": "row"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 170
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBalance\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBalance\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 1",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 170
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBalance\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBalance\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 100",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 178
      },
      "id": 15,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBalance\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBalance\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 1000",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 178
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBalance\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBalance\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 10000",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "erigon-qa",
        "uid": "cdvi0t6pgnldse"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 186
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0-80683",
      "targets": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBalance\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
          "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBalance\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
          "queryType": "query",
          "refId": "A"
        }
      ],
      "title": "Latency QPS 20000",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 194
      },
      "id": 29,
      "panels": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8267
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8267
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 100",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8275
          },
          "id": 32,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8275
          },
          "id": 33,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 10000",
          "type": "timeseries"
        }
      ],
      "title": "Silkworm - eth_getBlockByHash",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 195
      },
      "id": 34,
      "panels": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8269
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByNumber\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByNumber\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8269
          },
          "id": 36,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByNumber\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByNumber\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 100",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8277
          },
          "id": 37,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByNumber\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByNumber\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8277
          },
          "id": 38,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getBlockByNumber\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getBlockByNumber\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 10000",
          "type": "timeseries"
        }
      ],
      "title": "Silkworm - eth_getBlockByNumber",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 196
      },
      "id": 24,
      "panels": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8268
          },
          "id": 25,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8268
          },
          "id": 26,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 100",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8276
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8276
          },
          "id": 28,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionByHash\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionByHash\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 10000",
          "type": "timeseries"
        }
      ],
      "title": "Silkworm - eth_getTransactionByHash",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 197
      },
      "id": 39,
      "panels": [
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8267
          },
          "id": 41,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionReceipt\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",0]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionReceipt\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 0] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8267
          },
          "id": 42,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionReceipt\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",1]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionReceipt\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 1] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 100",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8275
          },
          "id": 43,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionReceipt\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",2]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionReceipt\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 2] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 1000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8275
          },
          "id": 46,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionReceipt\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",3]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionReceipt\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 3] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 10000",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "erigon-qa",
            "uid": "cdvi0t6pgnldse"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8283
          },
          "id": 40,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "erigon-qa",
                "uid": "cdvi0t6pgnldse"
              },
              "parsedQuery": "db.getCollection(\"TestResults\").aggregate([{\"$match\":{\"repo\":\"silkworm\",\"branch\":\"master\",\"chain\":\"mainnet\",\"test\":\"rpc-performance-test-erigon-eth_getTransactionReceipt\"}},{\"$project\":{\"date\":1,\"Latency (repetition 0)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",0]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 1)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",1]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 2)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",2]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 3)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",3]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}},\"Latency (repetition 4)\":{\"$let\":{\"vars\":{\"firstResult\":{\"$arrayElemAt\":[\"$results.results\",4]}},\"in\":{\"$let\":{\"vars\":{\"firstTestRepetition\":{\"$arrayElemAt\":[\"$$firstResult.testRepetitions\",4]}},\"in\":\"$$firstTestRepetition.vegetaReport.latencies.max\"}}}}}}])\n",
              "query": "db.getCollection(\"TestResults\").aggregate([\n    {\n        $match: {\n            repo: \"silkworm\",\n            branch: \"master\",\n            chain: \"mainnet\",\n            test: \"rpc-performance-test-erigon-eth_getTransactionReceipt\"\n        }\n    },\n  {\n    $project: {\n      date: 1,\n      \"Latency (repetition 0)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 0] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 1)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 1] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 2)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 2] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 3)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 3] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      },\n      \"Latency (repetition 4)\": {\n        $let: {\n          vars: {\n            firstResult: { $arrayElemAt: ['$results.results', 4] }\n          },\n          in: {\n            $let: {\n              vars: {\n                firstTestRepetition: { $arrayElemAt: ['$$firstResult.testRepetitions', 4] }\n              },\n              in: '$$firstTestRepetition.vegetaReport.latencies.max'\n            }\n          }\n        }\n      }\n    }\n  }\n])\n",
              "queryType": "query",
              "refId": "A"
            }
          ],
          "title": "Latency QPS 20000",
          "type": "timeseries"
        }
      ],
      "title": "Silkworm - eth_getTransactionReceipt",
      "type": "row"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "ErigonQA",
  "uid": "ddqiwbfvrgwlcd",
  "version": 78,
  "weekStart": ""
}
