// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ledgerwatch/erigon-lib/common/hexutility"
	"github.com/ledgerwatch/erigon/common/math"
)

// MarshalJSON marshals as JSON.
func (a AuRaSeal) MarshalJSON() ([]byte, error) {
	type AuRaSeal struct {
		AuthorityRound struct {
			Step      math.HexOrDecimal64 "json:\"step\""
			Signature hexutility.Bytes    "json:\"signature\""
		} `json:"authorityRound"`
	}
	var enc AuRaSeal
	enc.AuthorityRound = a.AuthorityRound
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *AuRaSeal) UnmarshalJSON(input []byte) error {
	type AuRaSeal struct {
		AuthorityRound *struct {
			Step      math.HexOrDecimal64 "json:\"step\""
			Signature hexutility.Bytes    "json:\"signature\""
		} `json:"authorityRound"`
	}
	var dec AuRaSeal
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.AuthorityRound != nil {
		a.AuthorityRound = *dec.AuthorityRound
	}
	return nil
}
