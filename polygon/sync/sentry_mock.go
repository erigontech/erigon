// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ledgerwatch/erigon/polygon/sync (interfaces: Sentry)

// Package sync is a generated GoMock package.
package sync

import (
	context "context"
	big "math/big"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/ledgerwatch/erigon/core/types"
)

// MockSentry is a mock of Sentry interface.
type MockSentry struct {
	ctrl     *gomock.Controller
	recorder *MockSentryMockRecorder
}

// MockSentryMockRecorder is the mock recorder for MockSentry.
type MockSentryMockRecorder struct {
	mock *MockSentry
}

// NewMockSentry creates a new mock instance.
func NewMockSentry(ctrl *gomock.Controller) *MockSentry {
	mock := &MockSentry{ctrl: ctrl}
	mock.recorder = &MockSentryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSentry) EXPECT() *MockSentryMockRecorder {
	return m.recorder
}

// DownloadHeaders mocks base method.
func (m *MockSentry) DownloadHeaders(arg0 context.Context, arg1, arg2 *big.Int, arg3 string) ([]*types.Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadHeaders", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*types.Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadHeaders indicates an expected call of DownloadHeaders.
func (mr *MockSentryMockRecorder) DownloadHeaders(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadHeaders", reflect.TypeOf((*MockSentry)(nil).DownloadHeaders), arg0, arg1, arg2, arg3)
}

// MaxPeers mocks base method.
func (m *MockSentry) MaxPeers() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MaxPeers")
	ret0, _ := ret[0].(int)
	return ret0
}

// MaxPeers indicates an expected call of MaxPeers.
func (mr *MockSentryMockRecorder) MaxPeers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MaxPeers", reflect.TypeOf((*MockSentry)(nil).MaxPeers))
}

// PeersWithBlockNumInfo mocks base method.
func (m *MockSentry) PeersWithBlockNumInfo() PeersWithBlockNumInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PeersWithBlockNumInfo")
	ret0, _ := ret[0].(PeersWithBlockNumInfo)
	return ret0
}

// PeersWithBlockNumInfo indicates an expected call of PeersWithBlockNumInfo.
func (mr *MockSentryMockRecorder) PeersWithBlockNumInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PeersWithBlockNumInfo", reflect.TypeOf((*MockSentry)(nil).PeersWithBlockNumInfo))
}

// Penalize mocks base method.
func (m *MockSentry) Penalize(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Penalize", arg0)
}

// Penalize indicates an expected call of Penalize.
func (mr *MockSentryMockRecorder) Penalize(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Penalize", reflect.TypeOf((*MockSentry)(nil).Penalize), arg0)
}
