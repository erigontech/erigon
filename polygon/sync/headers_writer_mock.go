// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ledgerwatch/erigon/polygon/sync (interfaces: HeadersWriter)

// Package sync is a generated GoMock package.
package sync

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/ledgerwatch/erigon/core/types"
)

// MockHeadersWriter is a mock of HeadersWriter interface.
type MockHeadersWriter struct {
	ctrl     *gomock.Controller
	recorder *MockHeadersWriterMockRecorder
}

// MockHeadersWriterMockRecorder is the mock recorder for MockHeadersWriter.
type MockHeadersWriterMockRecorder struct {
	mock *MockHeadersWriter
}

// NewMockHeadersWriter creates a new mock instance.
func NewMockHeadersWriter(ctrl *gomock.Controller) *MockHeadersWriter {
	mock := &MockHeadersWriter{ctrl: ctrl}
	mock.recorder = &MockHeadersWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHeadersWriter) EXPECT() *MockHeadersWriterMockRecorder {
	return m.recorder
}

// PutHeaders mocks base method.
func (m *MockHeadersWriter) PutHeaders(arg0 context.Context, arg1 []*types.Header) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutHeaders", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutHeaders indicates an expected call of PutHeaders.
func (mr *MockHeadersWriterMockRecorder) PutHeaders(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutHeaders", reflect.TypeOf((*MockHeadersWriter)(nil).PutHeaders), arg0, arg1)
}
