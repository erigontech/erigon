// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: downloader/downloader.proto

package downloaderproto

import (
	typesproto "github.com/erigontech/erigon-lib/gointerfaces/typesproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DownloadItem:
// - if Erigon created new snapshot and want seed it
// - if Erigon wnat download files - it fills only "torrent_hash" field
type AddItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	TorrentHash   *typesproto.H160       `protobuf:"bytes,2,opt,name=torrent_hash,json=torrentHash,proto3" json:"torrent_hash,omitempty"` // will be resolved as magnet link
	Verify        bool                   `protobuf:"varint,3,opt,name=verify,proto3" json:"verify,omitempty"`                             // Ignore cached piece state. Force reverification.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddItem) Reset() {
	*x = AddItem{}
	mi := &file_downloader_downloader_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItem) ProtoMessage() {}

func (x *AddItem) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItem.ProtoReflect.Descriptor instead.
func (*AddItem) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{0}
}

func (x *AddItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddItem) GetTorrentHash() *typesproto.H160 {
	if x != nil {
		return x.TorrentHash
	}
	return nil
}

func (x *AddItem) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*AddItem             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // single hash will be resolved as magnet link
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{1}
}

func (x *AddRequest) GetItems() []*AddItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// DeleteRequest: stop seeding, delete file, delete .torrent
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type VerifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{3}
}

type ProhibitNewDownloadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProhibitNewDownloadsRequest) Reset() {
	*x = ProhibitNewDownloadsRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProhibitNewDownloadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProhibitNewDownloadsRequest) ProtoMessage() {}

func (x *ProhibitNewDownloadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProhibitNewDownloadsRequest.ProtoReflect.Descriptor instead.
func (*ProhibitNewDownloadsRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{4}
}

func (x *ProhibitNewDownloadsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// SetLogPrefixRequest: set downloader log prefix
type SetLogPrefixRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogPrefixRequest) Reset() {
	*x = SetLogPrefixRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogPrefixRequest) ProtoMessage() {}

func (x *SetLogPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogPrefixRequest.ProtoReflect.Descriptor instead.
func (*SetLogPrefixRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{5}
}

func (x *SetLogPrefixRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type CompletedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedRequest) Reset() {
	*x = CompletedRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedRequest) ProtoMessage() {}

func (x *CompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedRequest.ProtoReflect.Descriptor instead.
func (*CompletedRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{6}
}

// CompletedReply: return true if download is completed
type CompletedReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Completed     bool                   `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedReply) Reset() {
	*x = CompletedReply{}
	mi := &file_downloader_downloader_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedReply) ProtoMessage() {}

func (x *CompletedReply) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedReply.ProtoReflect.Descriptor instead.
func (*CompletedReply) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{7}
}

func (x *CompletedReply) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type TorrentCompletedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TorrentCompletedRequest) Reset() {
	*x = TorrentCompletedRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TorrentCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentCompletedRequest) ProtoMessage() {}

func (x *TorrentCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentCompletedRequest.ProtoReflect.Descriptor instead.
func (*TorrentCompletedRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{8}
}

// Message: downloaded file data
type TorrentCompletedReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash          *typesproto.H160       `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TorrentCompletedReply) Reset() {
	*x = TorrentCompletedReply{}
	mi := &file_downloader_downloader_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TorrentCompletedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentCompletedReply) ProtoMessage() {}

func (x *TorrentCompletedReply) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentCompletedReply.ProtoReflect.Descriptor instead.
func (*TorrentCompletedReply) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{9}
}

func (x *TorrentCompletedReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TorrentCompletedReply) GetHash() *typesproto.H160 {
	if x != nil {
		return x.Hash
	}
	return nil
}

type CommitPreverifiedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TomlBytes     []byte                 `protobuf:"bytes,1,opt,name=toml_bytes,json=tomlBytes,proto3" json:"toml_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitPreverifiedRequest) Reset() {
	*x = CommitPreverifiedRequest{}
	mi := &file_downloader_downloader_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitPreverifiedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitPreverifiedRequest) ProtoMessage() {}

func (x *CommitPreverifiedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_downloader_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitPreverifiedRequest.ProtoReflect.Descriptor instead.
func (*CommitPreverifiedRequest) Descriptor() ([]byte, []int) {
	return file_downloader_downloader_proto_rawDescGZIP(), []int{10}
}

func (x *CommitPreverifiedRequest) GetTomlBytes() []byte {
	if x != nil {
		return x.TomlBytes
	}
	return nil
}

var File_downloader_downloader_proto protoreflect.FileDescriptor

const file_downloader_downloader_proto_rawDesc = "" +
	"\n" +
	"\x1bdownloader/downloader.proto\x12\n" +
	"downloader\x1a\x1bgoogle/protobuf/empty.proto\x1a\x11types/types.proto\"e\n" +
	"\aAddItem\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12.\n" +
	"\ftorrent_hash\x18\x02 \x01(\v2\v.types.H160R\vtorrentHash\x12\x16\n" +
	"\x06verify\x18\x03 \x01(\bR\x06verify\"7\n" +
	"\n" +
	"AddRequest\x12)\n" +
	"\x05items\x18\x01 \x03(\v2\x13.downloader.AddItemR\x05items\"%\n" +
	"\rDeleteRequest\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"\x0f\n" +
	"\rVerifyRequest\"1\n" +
	"\x1bProhibitNewDownloadsRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"-\n" +
	"\x13SetLogPrefixRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\"\x12\n" +
	"\x10CompletedRequest\".\n" +
	"\x0eCompletedReply\x12\x1c\n" +
	"\tcompleted\x18\x01 \x01(\bR\tcompleted\"\x19\n" +
	"\x17TorrentCompletedRequest\"L\n" +
	"\x15TorrentCompletedReply\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\x04hash\x18\x02 \x01(\v2\v.types.H160R\x04hash\"9\n" +
	"\x18CommitPreverifiedRequest\x12\x1d\n" +
	"\n" +
	"toml_bytes\x18\x01 \x01(\fR\ttomlBytes2\xed\x02\n" +
	"\n" +
	"Downloader\x127\n" +
	"\x03Add\x12\x16.downloader.AddRequest\x1a\x16.google.protobuf.Empty\"\x00\x12=\n" +
	"\x06Delete\x12\x19.downloader.DeleteRequest\x1a\x16.google.protobuf.Empty\"\x00\x12I\n" +
	"\fSetLogPrefix\x12\x1f.downloader.SetLogPrefixRequest\x1a\x16.google.protobuf.Empty\"\x00\x12G\n" +
	"\tCompleted\x12\x1c.downloader.CompletedRequest\x1a\x1a.downloader.CompletedReply\"\x00\x12S\n" +
	"\x11CommitPreverified\x12$.downloader.CommitPreverifiedRequest\x1a\x16.google.protobuf.Empty\"\x00B\x1eZ\x1c./downloader;downloaderprotob\x06proto3"

var (
	file_downloader_downloader_proto_rawDescOnce sync.Once
	file_downloader_downloader_proto_rawDescData []byte
)

func file_downloader_downloader_proto_rawDescGZIP() []byte {
	file_downloader_downloader_proto_rawDescOnce.Do(func() {
		file_downloader_downloader_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_downloader_downloader_proto_rawDesc), len(file_downloader_downloader_proto_rawDesc)))
	})
	return file_downloader_downloader_proto_rawDescData
}

var file_downloader_downloader_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_downloader_downloader_proto_goTypes = []any{
	(*AddItem)(nil),                     // 0: downloader.AddItem
	(*AddRequest)(nil),                  // 1: downloader.AddRequest
	(*DeleteRequest)(nil),               // 2: downloader.DeleteRequest
	(*VerifyRequest)(nil),               // 3: downloader.VerifyRequest
	(*ProhibitNewDownloadsRequest)(nil), // 4: downloader.ProhibitNewDownloadsRequest
	(*SetLogPrefixRequest)(nil),         // 5: downloader.SetLogPrefixRequest
	(*CompletedRequest)(nil),            // 6: downloader.CompletedRequest
	(*CompletedReply)(nil),              // 7: downloader.CompletedReply
	(*TorrentCompletedRequest)(nil),     // 8: downloader.TorrentCompletedRequest
	(*TorrentCompletedReply)(nil),       // 9: downloader.TorrentCompletedReply
	(*CommitPreverifiedRequest)(nil),    // 10: downloader.CommitPreverifiedRequest
	(*typesproto.H160)(nil),             // 11: types.H160
	(*emptypb.Empty)(nil),               // 12: google.protobuf.Empty
}
var file_downloader_downloader_proto_depIdxs = []int32{
	11, // 0: downloader.AddItem.torrent_hash:type_name -> types.H160
	0,  // 1: downloader.AddRequest.items:type_name -> downloader.AddItem
	11, // 2: downloader.TorrentCompletedReply.hash:type_name -> types.H160
	1,  // 3: downloader.Downloader.Add:input_type -> downloader.AddRequest
	2,  // 4: downloader.Downloader.Delete:input_type -> downloader.DeleteRequest
	5,  // 5: downloader.Downloader.SetLogPrefix:input_type -> downloader.SetLogPrefixRequest
	6,  // 6: downloader.Downloader.Completed:input_type -> downloader.CompletedRequest
	10, // 7: downloader.Downloader.CommitPreverified:input_type -> downloader.CommitPreverifiedRequest
	12, // 8: downloader.Downloader.Add:output_type -> google.protobuf.Empty
	12, // 9: downloader.Downloader.Delete:output_type -> google.protobuf.Empty
	12, // 10: downloader.Downloader.SetLogPrefix:output_type -> google.protobuf.Empty
	7,  // 11: downloader.Downloader.Completed:output_type -> downloader.CompletedReply
	12, // 12: downloader.Downloader.CommitPreverified:output_type -> google.protobuf.Empty
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_downloader_downloader_proto_init() }
func file_downloader_downloader_proto_init() {
	if File_downloader_downloader_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_downloader_downloader_proto_rawDesc), len(file_downloader_downloader_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_downloader_downloader_proto_goTypes,
		DependencyIndexes: file_downloader_downloader_proto_depIdxs,
		MessageInfos:      file_downloader_downloader_proto_msgTypes,
	}.Build()
	File_downloader_downloader_proto = out.File
	file_downloader_downloader_proto_goTypes = nil
	file_downloader_downloader_proto_depIdxs = nil
}
