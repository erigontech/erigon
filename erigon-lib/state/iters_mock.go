// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ledgerwatch/erigon-lib/state (interfaces: IterFactory)
//
// Generated by this command:
//
//	mockgen -typed=true -destination=./iters_mock.go -package=state . IterFactory
//

// Package state is a generated GoMock package.
package state

import (
	reflect "reflect"

	kv "github.com/ledgerwatch/erigon-lib/kv"
	iter "github.com/ledgerwatch/erigon-lib/kv/iter"
	order "github.com/ledgerwatch/erigon-lib/kv/order"
	gomock "go.uber.org/mock/gomock"
)

// MockIterFactory is a mock of IterFactory interface.
type MockIterFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIterFactoryMockRecorder
}

// MockIterFactoryMockRecorder is the mock recorder for MockIterFactory.
type MockIterFactoryMockRecorder struct {
	mock *MockIterFactory
}

// NewMockIterFactory creates a new mock instance.
func NewMockIterFactory(ctrl *gomock.Controller) *MockIterFactory {
	mock := &MockIterFactory{ctrl: ctrl}
	mock.recorder = &MockIterFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIterFactory) EXPECT() *MockIterFactoryMockRecorder {
	return m.recorder
}

// TxnIdsOfCanonicalBlocks mocks base method.
func (m *MockIterFactory) TxnIdsOfCanonicalBlocks(arg0 kv.Tx, arg1, arg2 int, arg3 order.By, arg4 int) (iter.U64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxnIdsOfCanonicalBlocks", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(iter.U64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TxnIdsOfCanonicalBlocks indicates an expected call of TxnIdsOfCanonicalBlocks.
func (mr *MockIterFactoryMockRecorder) TxnIdsOfCanonicalBlocks(arg0, arg1, arg2, arg3, arg4 any) *MockIterFactoryTxnIdsOfCanonicalBlocksCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxnIdsOfCanonicalBlocks", reflect.TypeOf((*MockIterFactory)(nil).TxnIdsOfCanonicalBlocks), arg0, arg1, arg2, arg3, arg4)
	return &MockIterFactoryTxnIdsOfCanonicalBlocksCall{Call: call}
}

// MockIterFactoryTxnIdsOfCanonicalBlocksCall wrap *gomock.Call
type MockIterFactoryTxnIdsOfCanonicalBlocksCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockIterFactoryTxnIdsOfCanonicalBlocksCall) Return(arg0 iter.U64, arg1 error) *MockIterFactoryTxnIdsOfCanonicalBlocksCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockIterFactoryTxnIdsOfCanonicalBlocksCall) Do(f func(kv.Tx, int, int, order.By, int) (iter.U64, error)) *MockIterFactoryTxnIdsOfCanonicalBlocksCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockIterFactoryTxnIdsOfCanonicalBlocksCall) DoAndReturn(f func(kv.Tx, int, int, order.By, int) (iter.U64, error)) *MockIterFactoryTxnIdsOfCanonicalBlocksCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
