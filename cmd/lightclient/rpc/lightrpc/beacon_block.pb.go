// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: beacon_block.proto

package lightrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Eth1Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root         []byte `protobuf:"bytes,1,opt,name=Root,json=deposit_root,proto3" json:"Root,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	DepositCount uint64 `protobuf:"varint,2,opt,name=DepositCount,json=deposit_count,proto3" json:"DepositCount,omitempty"`
	BlockHash    []byte `protobuf:"bytes,3,opt,name=BlockHash,json=block_hash,proto3" json:"BlockHash,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
}

func (x *Eth1Data) Reset() {
	*x = Eth1Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eth1Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eth1Data) ProtoMessage() {}

func (x *Eth1Data) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eth1Data.ProtoReflect.Descriptor instead.
func (*Eth1Data) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{0}
}

func (x *Eth1Data) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *Eth1Data) GetDepositCount() uint64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *Eth1Data) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type BeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          uint64 `protobuf:"varint,1,opt,name=Slot,json=slot,proto3" json:"Slot,omitempty"`
	ProposerIndex uint64 `protobuf:"varint,2,opt,name=ProposerIndex,json=proposer_index,proto3" json:"ProposerIndex,omitempty"`
	ParentRoot    []byte `protobuf:"bytes,3,opt,name=ParentRoot,json=parent_root,proto3" json:"ParentRoot,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	Root          []byte `protobuf:"bytes,4,opt,name=Root,json=root,proto3" json:"Root,omitempty" ssz-size:"32"`                    // @gotags: ssz-size:"32"
	BodyRoot      []byte `protobuf:"bytes,5,opt,name=BodyRoot,json=body_root,proto3" json:"BodyRoot,omitempty" ssz-size:"32"`       // @gotags: ssz-size:"32"
}

func (x *BeaconBlockHeader) Reset() {
	*x = BeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockHeader) ProtoMessage() {}

func (x *BeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*BeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{1}
}

func (x *BeaconBlockHeader) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BeaconBlockHeader) GetProposerIndex() uint64 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (x *BeaconBlockHeader) GetParentRoot() []byte {
	if x != nil {
		return x.ParentRoot
	}
	return nil
}

func (x *BeaconBlockHeader) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *BeaconBlockHeader) GetBodyRoot() []byte {
	if x != nil {
		return x.BodyRoot
	}
	return nil
}

type SignedBeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *BeaconBlockHeader `protobuf:"bytes,1,opt,name=Header,json=message,proto3" json:"Header,omitempty"`
	Signature []byte             `protobuf:"bytes,2,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
}

func (x *SignedBeaconBlockHeader) Reset() {
	*x = SignedBeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlockHeader) ProtoMessage() {}

func (x *SignedBeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{2}
}

func (x *SignedBeaconBlockHeader) GetHeader() *BeaconBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SignedBeaconBlockHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Slashing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header1 *SignedBeaconBlockHeader `protobuf:"bytes,1,opt,name=Header1,json=signed_header_1,proto3" json:"Header1,omitempty"`
	Header2 *SignedBeaconBlockHeader `protobuf:"bytes,2,opt,name=Header2,json=signed_header_2,proto3" json:"Header2,omitempty"`
}

func (x *Slashing) Reset() {
	*x = Slashing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slashing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slashing) ProtoMessage() {}

func (x *Slashing) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slashing.ProtoReflect.Descriptor instead.
func (*Slashing) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{3}
}

func (x *Slashing) GetHeader1() *SignedBeaconBlockHeader {
	if x != nil {
		return x.Header1
	}
	return nil
}

func (x *Slashing) GetHeader2() *SignedBeaconBlockHeader {
	if x != nil {
		return x.Header2
	}
	return nil
}

// TODO(Giulio2002): Finish.
type AttestationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot            uint64 `protobuf:"varint,1,opt,name=Slot,json=slot,proto3" json:"Slot,omitempty"`
	Index           uint64 `protobuf:"varint,2,opt,name=Index,json=index,proto3" json:"Index,omitempty"`
	BeaconBlockHash []byte `protobuf:"bytes,3,opt,name=BeaconBlockHash,json=beacon_block_hash,proto3" json:"BeaconBlockHash,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
}

func (x *AttestationData) Reset() {
	*x = AttestationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationData) ProtoMessage() {}

func (x *AttestationData) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationData.ProtoReflect.Descriptor instead.
func (*AttestationData) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{4}
}

func (x *AttestationData) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *AttestationData) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AttestationData) GetBeaconBlockHash() []byte {
	if x != nil {
		return x.BeaconBlockHash
	}
	return nil
}

type Attestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregationBits []byte           `protobuf:"bytes,1,opt,name=AggregationBits,json=aggregation_bits,proto3" json:"AggregationBits,omitempty" ssz-max:"2048" ssz:"bitlist"` // @gotags: ssz-max:"2048" ssz:"bitlist"
	Data            *AttestationData `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
	Signature       []byte           `protobuf:"bytes,3,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
}

func (x *Attestation) Reset() {
	*x = Attestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attestation) ProtoMessage() {}

func (x *Attestation) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attestation.ProtoReflect.Descriptor instead.
func (*Attestation) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{5}
}

func (x *Attestation) GetAggregationBits() []byte {
	if x != nil {
		return x.AggregationBits
	}
	return nil
}

func (x *Attestation) GetData() *AttestationData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Attestation) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type DepositData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey                []byte `protobuf:"bytes,1,opt,name=PubKey,json=pubkey,proto3" json:"PubKey,omitempty" ssz-size:"48"`                                               // @gotags: ssz-size:"48"
	WithdrawalCredentials []byte `protobuf:"bytes,2,opt,name=WithdrawalCredentials,json=withdrawal_credentials,proto3" json:"WithdrawalCredentials,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	Amount                uint64 `protobuf:"varint,3,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	Signature             []byte `protobuf:"bytes,4,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
	Root                  []byte `protobuf:"bytes,5,opt,name=Root,proto3" json:"Root,omitempty" ssz:"-"`                          // @gotags: ssz:"-"
}

func (x *DepositData) Reset() {
	*x = DepositData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositData) ProtoMessage() {}

func (x *DepositData) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositData.ProtoReflect.Descriptor instead.
func (*DepositData) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{6}
}

func (x *DepositData) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *DepositData) GetWithdrawalCredentials() []byte {
	if x != nil {
		return x.WithdrawalCredentials
	}
	return nil
}

func (x *DepositData) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositData) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DepositData) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof [][]byte     `protobuf:"bytes,1,rep,name=Proof,json=proof,proto3" json:"Proof,omitempty" ssz-size:"33,32"` // @gotags: ssz-size:"33,32"
	Data  *DepositData `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
}

func (x *Deposit) Reset() {
	*x = Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit) ProtoMessage() {}

func (x *Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit.ProtoReflect.Descriptor instead.
func (*Deposit) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{7}
}

func (x *Deposit) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Deposit) GetData() *DepositData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SignedVoluntaryExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolunaryExit *VoluntaryExit `protobuf:"bytes,1,opt,name=VolunaryExit,json=message,proto3" json:"VolunaryExit,omitempty"`
	Signature    []byte         `protobuf:"bytes,2,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
}

func (x *SignedVoluntaryExit) Reset() {
	*x = SignedVoluntaryExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedVoluntaryExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedVoluntaryExit) ProtoMessage() {}

func (x *SignedVoluntaryExit) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedVoluntaryExit.ProtoReflect.Descriptor instead.
func (*SignedVoluntaryExit) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{8}
}

func (x *SignedVoluntaryExit) GetVolunaryExit() *VoluntaryExit {
	if x != nil {
		return x.VolunaryExit
	}
	return nil
}

func (x *SignedVoluntaryExit) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VoluntaryExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch          uint64 `protobuf:"varint,1,opt,name=Epoch,json=epoch,proto3" json:"Epoch,omitempty"`
	ValidatorIndex uint64 `protobuf:"varint,2,opt,name=ValidatorIndex,json=validator_index,proto3" json:"ValidatorIndex,omitempty"`
}

func (x *VoluntaryExit) Reset() {
	*x = VoluntaryExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoluntaryExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoluntaryExit) ProtoMessage() {}

func (x *VoluntaryExit) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoluntaryExit.ProtoReflect.Descriptor instead.
func (*VoluntaryExit) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{9}
}

func (x *VoluntaryExit) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *VoluntaryExit) GetValidatorIndex() uint64 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

type SyncAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCommiteeBits      []byte `protobuf:"bytes,1,opt,name=SyncCommiteeBits,json=sync_committee_bits,proto3" json:"SyncCommiteeBits,omitempty" ssz-size:"64"`                // @gotags: ssz-size:"64"
	SyncCommiteeSignature []byte `protobuf:"bytes,2,opt,name=SyncCommiteeSignature,json=sync_committee_signature,proto3" json:"SyncCommiteeSignature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
}

func (x *SyncAggregate) Reset() {
	*x = SyncAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAggregate) ProtoMessage() {}

func (x *SyncAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAggregate.ProtoReflect.Descriptor instead.
func (*SyncAggregate) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{10}
}

func (x *SyncAggregate) GetSyncCommiteeBits() []byte {
	if x != nil {
		return x.SyncCommiteeBits
	}
	return nil
}

func (x *SyncAggregate) GetSyncCommiteeSignature() []byte {
	if x != nil {
		return x.SyncCommiteeSignature
	}
	return nil
}

// Lightclient will sent this to Erigon once validation is done.
type ExecutionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash    []byte   `protobuf:"bytes,1,opt,name=ParentHash,json=parent_hash,proto3" json:"ParentHash,omitempty" ssz-size:"32"`       // @gotags: ssz-size:"32"
	FeeRecipient  []byte   `protobuf:"bytes,2,opt,name=FeeRecipient,json=fee_recipient,proto3" json:"FeeRecipient,omitempty" ssz-size:"20"` // @gotags: ssz-size:"20"
	StateRoot     []byte   `protobuf:"bytes,3,opt,name=StateRoot,json=state_root,proto3" json:"StateRoot,omitempty" ssz-size:"32"`          // @gotags: ssz-size:"32"
	ReceiptsRoot  []byte   `protobuf:"bytes,4,opt,name=ReceiptsRoot,json=receipts_root,proto3" json:"ReceiptsRoot,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	LogsBloom     []byte   `protobuf:"bytes,5,opt,name=LogsBloom,json=logs_bloom,proto3" json:"LogsBloom,omitempty" ssz-size:"256"`          // @gotags: ssz-size:"256"
	PrevRandao    []byte   `protobuf:"bytes,6,opt,name=PrevRandao,json=prev_randao,proto3" json:"PrevRandao,omitempty" ssz-size:"32"`       // @gotags: ssz-size:"32"
	BlockNumber   uint64   `protobuf:"varint,7,opt,name=BlockNumber,json=block_number,proto3" json:"BlockNumber,omitempty"`
	GasLimit      uint64   `protobuf:"varint,8,opt,name=GasLimit,json=gas_limit,proto3" json:"GasLimit,omitempty"`
	GasUsed       uint64   `protobuf:"varint,9,opt,name=GasUsed,json=gas_used,proto3" json:"GasUsed,omitempty"`
	Timestamp     uint64   `protobuf:"varint,10,opt,name=Timestamp,json=timestamp,proto3" json:"Timestamp,omitempty"`
	ExtraData     []byte   `protobuf:"bytes,11,opt,name=ExtraData,json=extra_data,proto3" json:"ExtraData,omitempty" ssz-max:"32"`               // @gotags: ssz-max:"32"
	BaseFeePerGas []byte   `protobuf:"bytes,12,opt,name=BaseFeePerGas,json=base_fee_per_gas,proto3" json:"BaseFeePerGas,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	BlockHash     []byte   `protobuf:"bytes,13,opt,name=BlockHash,json=block_hash,proto3" json:"BlockHash,omitempty" ssz-size:"32"`               // @gotags: ssz-size:"32"
	Transactions  [][]byte `protobuf:"bytes,14,rep,name=Transactions,json=transactions,proto3" json:"Transactions,omitempty" ssz-size:"?,?" ssz-max:"1048576,1073741824"`       // @gotags: ssz-size:"?,?" ssz-max:"1048576,1073741824"
}

func (x *ExecutionPayload) Reset() {
	*x = ExecutionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayload) ProtoMessage() {}

func (x *ExecutionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPayload.ProtoReflect.Descriptor instead.
func (*ExecutionPayload) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{11}
}

func (x *ExecutionPayload) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ExecutionPayload) GetFeeRecipient() []byte {
	if x != nil {
		return x.FeeRecipient
	}
	return nil
}

func (x *ExecutionPayload) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *ExecutionPayload) GetReceiptsRoot() []byte {
	if x != nil {
		return x.ReceiptsRoot
	}
	return nil
}

func (x *ExecutionPayload) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *ExecutionPayload) GetPrevRandao() []byte {
	if x != nil {
		return x.PrevRandao
	}
	return nil
}

func (x *ExecutionPayload) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayload) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayload) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayload) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ExecutionPayload) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ExecutionPayload) GetBaseFeePerGas() []byte {
	if x != nil {
		return x.BaseFeePerGas
	}
	return nil
}

func (x *ExecutionPayload) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *ExecutionPayload) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type BeaconBodyBellatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandaoReveal      []byte                 `protobuf:"bytes,1,opt,name=RandaoReveal,json=randao_reveal,proto3" json:"RandaoReveal,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
	Eth1Data          *Eth1Data              `protobuf:"bytes,2,opt,name=Eth1Data,json=eth1_data,proto3" json:"Eth1Data,omitempty"`
	Graffiti          []byte                 `protobuf:"bytes,3,opt,name=Graffiti,json=graffiti,proto3" json:"Graffiti,omitempty" ssz-size:"32"`                             // @gotags: ssz-size:"32"
	ProposerSlashings []*Slashing            `protobuf:"bytes,4,rep,name=ProposerSlashings,json=proposer_slashings,proto3" json:"ProposerSlashings,omitempty" ssz-max:"16"` // @gotags: ssz-max:"16"
	AttesterSlashings []*Slashing            `protobuf:"bytes,5,rep,name=AttesterSlashings,json=attester_slashings,proto3" json:"AttesterSlashings,omitempty" ssz-max:"2"` // @gotags: ssz-max:"2"
	Attestations      []*Attestation         `protobuf:"bytes,6,rep,name=Attestations,json=attestations,proto3" json:"Attestations,omitempty" ssz-max:"128"`                 // @gotags: ssz-max:"128"
	Deposits          []*Deposit             `protobuf:"bytes,7,rep,name=Deposits,json=deposits,proto3" json:"Deposits,omitempty" ssz-max:"16"`                             // @gotags: ssz-max:"16"
	VoluntaryExits    []*SignedVoluntaryExit `protobuf:"bytes,8,rep,name=VoluntaryExits,json=voluntary_exits,proto3" json:"VoluntaryExits,omitempty" ssz-max:"16"`          // @gotags: ssz-max:"16"
	SyncAggregate     *SyncAggregate         `protobuf:"bytes,9,opt,name=SyncAggregate,json=sync_aggregate,proto3" json:"SyncAggregate,omitempty"`
	ExecutionPayload  *ExecutionPayload      `protobuf:"bytes,10,opt,name=ExecutionPayload,json=execution_payload,proto3" json:"ExecutionPayload,omitempty"`
}

func (x *BeaconBodyBellatrix) Reset() {
	*x = BeaconBodyBellatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBodyBellatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBodyBellatrix) ProtoMessage() {}

func (x *BeaconBodyBellatrix) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBodyBellatrix.ProtoReflect.Descriptor instead.
func (*BeaconBodyBellatrix) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{12}
}

func (x *BeaconBodyBellatrix) GetRandaoReveal() []byte {
	if x != nil {
		return x.RandaoReveal
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetEth1Data() *Eth1Data {
	if x != nil {
		return x.Eth1Data
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetGraffiti() []byte {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetProposerSlashings() []*Slashing {
	if x != nil {
		return x.ProposerSlashings
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetAttesterSlashings() []*Slashing {
	if x != nil {
		return x.AttesterSlashings
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetAttestations() []*Attestation {
	if x != nil {
		return x.Attestations
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetDeposits() []*Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetVoluntaryExits() []*SignedVoluntaryExit {
	if x != nil {
		return x.VoluntaryExits
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *BeaconBodyBellatrix) GetExecutionPayload() *ExecutionPayload {
	if x != nil {
		return x.ExecutionPayload
	}
	return nil
}

type BeaconBlockBellatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          uint64               `protobuf:"varint,1,opt,name=Slot,json=slot,proto3" json:"Slot,omitempty"`
	ProposerIndex uint64               `protobuf:"varint,2,opt,name=ProposerIndex,json=proposer_index,proto3" json:"ProposerIndex,omitempty"`
	ParentRoot    []byte               `protobuf:"bytes,3,opt,name=ParentRoot,json=parent_root,proto3" json:"ParentRoot,omitempty" ssz-size:"32"` // @gotags: ssz-size:"32"
	StateRoot     []byte               `protobuf:"bytes,4,opt,name=StateRoot,json=root,proto3" json:"StateRoot,omitempty" ssz-size:"32"`          // @gotags: ssz-size:"32"
	Body          *BeaconBodyBellatrix `protobuf:"bytes,5,opt,name=Body,json=body,proto3" json:"Body,omitempty"`
}

func (x *BeaconBlockBellatrix) Reset() {
	*x = BeaconBlockBellatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockBellatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockBellatrix) ProtoMessage() {}

func (x *BeaconBlockBellatrix) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockBellatrix.ProtoReflect.Descriptor instead.
func (*BeaconBlockBellatrix) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{13}
}

func (x *BeaconBlockBellatrix) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BeaconBlockBellatrix) GetProposerIndex() uint64 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (x *BeaconBlockBellatrix) GetParentRoot() []byte {
	if x != nil {
		return x.ParentRoot
	}
	return nil
}

func (x *BeaconBlockBellatrix) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *BeaconBlockBellatrix) GetBody() *BeaconBodyBellatrix {
	if x != nil {
		return x.Body
	}
	return nil
}

type SignedBeaconBlockBellatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *BeaconBlockBellatrix `protobuf:"bytes,1,opt,name=Block,json=message,proto3" json:"Block,omitempty"`
	Signature []byte                `protobuf:"bytes,2,opt,name=Signature,json=signature,proto3" json:"Signature,omitempty" ssz-size:"96"` // @gotags: ssz-size:"96"
}

func (x *SignedBeaconBlockBellatrix) Reset() {
	*x = SignedBeaconBlockBellatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlockBellatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlockBellatrix) ProtoMessage() {}

func (x *SignedBeaconBlockBellatrix) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlockBellatrix.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlockBellatrix) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{14}
}

func (x *SignedBeaconBlockBellatrix) GetBlock() *BeaconBlockBellatrix {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *SignedBeaconBlockBellatrix) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type LightClientBootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header                     *BeaconBlockHeader `protobuf:"bytes,1,opt,name=Header,json=header,proto3" json:"Header,omitempty"`
	CurrentSyncCommittee       *SyncCommittee     `protobuf:"bytes,2,opt,name=CurrentSyncCommittee,json=current_sync_committee,proto3" json:"CurrentSyncCommittee,omitempty"`
	CurrentSyncCommitteeBranch [][]byte           `protobuf:"bytes,3,rep,name=CurrentSyncCommitteeBranch,json=current_sync_committee_branch,proto3" json:"CurrentSyncCommitteeBranch,omitempty" ssz-size:",32" ssz-max:"5"` // @gotags: ssz-size:",32" ssz-max:"5"
}

func (x *LightClientBootstrap) Reset() {
	*x = LightClientBootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientBootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientBootstrap) ProtoMessage() {}

func (x *LightClientBootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientBootstrap.ProtoReflect.Descriptor instead.
func (*LightClientBootstrap) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{15}
}

func (x *LightClientBootstrap) GetHeader() *BeaconBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *LightClientBootstrap) GetCurrentSyncCommittee() *SyncCommittee {
	if x != nil {
		return x.CurrentSyncCommittee
	}
	return nil
}

func (x *LightClientBootstrap) GetCurrentSyncCommitteeBranch() [][]byte {
	if x != nil {
		return x.CurrentSyncCommitteeBranch
	}
	return nil
}

type SyncCommittee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKeys [][]byte `protobuf:"bytes,1,rep,name=PubKeys,json=current_sync_committee,proto3" json:"PubKeys,omitempty" ssz-size:"512,48"` // @gotags: ssz-size:"512,48"
}

func (x *SyncCommittee) Reset() {
	*x = SyncCommittee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCommittee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCommittee) ProtoMessage() {}

func (x *SyncCommittee) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCommittee.ProtoReflect.Descriptor instead.
func (*SyncCommittee) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{16}
}

func (x *SyncCommittee) GetPubKeys() [][]byte {
	if x != nil {
		return x.PubKeys
	}
	return nil
}

type LightClientUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestedHeader          *BeaconBlockHeader `protobuf:"bytes,1,opt,name=AttestedHeader,json=attested_header,proto3" json:"AttestedHeader,omitempty"`
	NextSyncCommitee        *SyncCommittee     `protobuf:"bytes,2,opt,name=NextSyncCommitee,json=next_sync_committee,proto3" json:"NextSyncCommitee,omitempty"`
	NextSyncCommitteeBranch [][]byte           `protobuf:"bytes,3,rep,name=NextSyncCommitteeBranch,json=next_sync_committee_branch,proto3" json:"NextSyncCommitteeBranch,omitempty" ssz-size:",32" ssz-max:"5"` // @gotags: ssz-size:",32" ssz-max:"5"
	FinalizedHeader         *BeaconBlockHeader `protobuf:"bytes,4,opt,name=FinalizedHeader,json=finalized_header,proto3" json:"FinalizedHeader,omitempty"`
	FinalityBranch          [][]byte           `protobuf:"bytes,5,rep,name=FinalityBranch,json=finality_branch,proto3" json:"FinalityBranch,omitempty" ssz-size:",32" ssz-max:"6"` // @gotags: ssz-size:",32" ssz-max:"6"
	SyncAggregate           *SyncAggregate     `protobuf:"bytes,6,opt,name=SyncAggregate,json=sync_aggregate,proto3" json:"SyncAggregate,omitempty"`
	SignatureSlot           uint64             `protobuf:"varint,7,opt,name=SignatureSlot,json=signature_slot,proto3" json:"SignatureSlot,omitempty"`
}

func (x *LightClientUpdate) Reset() {
	*x = LightClientUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientUpdate) ProtoMessage() {}

func (x *LightClientUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientUpdate.ProtoReflect.Descriptor instead.
func (*LightClientUpdate) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{17}
}

func (x *LightClientUpdate) GetAttestedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.AttestedHeader
	}
	return nil
}

func (x *LightClientUpdate) GetNextSyncCommitee() *SyncCommittee {
	if x != nil {
		return x.NextSyncCommitee
	}
	return nil
}

func (x *LightClientUpdate) GetNextSyncCommitteeBranch() [][]byte {
	if x != nil {
		return x.NextSyncCommitteeBranch
	}
	return nil
}

func (x *LightClientUpdate) GetFinalizedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.FinalizedHeader
	}
	return nil
}

func (x *LightClientUpdate) GetFinalityBranch() [][]byte {
	if x != nil {
		return x.FinalityBranch
	}
	return nil
}

func (x *LightClientUpdate) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *LightClientUpdate) GetSignatureSlot() uint64 {
	if x != nil {
		return x.SignatureSlot
	}
	return 0
}

type LightClientFinalityUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestedHeader  *BeaconBlockHeader `protobuf:"bytes,1,opt,name=AttestedHeader,json=attested_header,proto3" json:"AttestedHeader,omitempty"`
	FinalizedHeader *BeaconBlockHeader `protobuf:"bytes,2,opt,name=FinalizedHeader,json=finalized_header,proto3" json:"FinalizedHeader,omitempty"`
	FinalityBranch  [][]byte           `protobuf:"bytes,3,rep,name=FinalityBranch,json=finality_branch,proto3" json:"FinalityBranch,omitempty" ssz-size:",32" ssz-max:"6"` // @gotags: ssz-size:",32" ssz-max:"6"
	SyncAggregate   *SyncAggregate     `protobuf:"bytes,4,opt,name=SyncAggregate,json=sync_aggregate,proto3" json:"SyncAggregate,omitempty"`
	SignatureSlot   uint64             `protobuf:"varint,5,opt,name=SignatureSlot,json=signature_slot,proto3" json:"SignatureSlot,omitempty"`
}

func (x *LightClientFinalityUpdate) Reset() {
	*x = LightClientFinalityUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientFinalityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientFinalityUpdate) ProtoMessage() {}

func (x *LightClientFinalityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientFinalityUpdate.ProtoReflect.Descriptor instead.
func (*LightClientFinalityUpdate) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{18}
}

func (x *LightClientFinalityUpdate) GetAttestedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.AttestedHeader
	}
	return nil
}

func (x *LightClientFinalityUpdate) GetFinalizedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.FinalizedHeader
	}
	return nil
}

func (x *LightClientFinalityUpdate) GetFinalityBranch() [][]byte {
	if x != nil {
		return x.FinalityBranch
	}
	return nil
}

func (x *LightClientFinalityUpdate) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *LightClientFinalityUpdate) GetSignatureSlot() uint64 {
	if x != nil {
		return x.SignatureSlot
	}
	return 0
}

type LightClientOptimisticUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestedHeader *BeaconBlockHeader `protobuf:"bytes,1,opt,name=AttestedHeader,json=attested_header,proto3" json:"AttestedHeader,omitempty"`
	SyncAggregate  *SyncAggregate     `protobuf:"bytes,2,opt,name=SyncAggregate,json=sync_aggregate,proto3" json:"SyncAggregate,omitempty"`
	SignatureSlot  uint64             `protobuf:"varint,3,opt,name=SignatureSlot,json=signature_slot,proto3" json:"SignatureSlot,omitempty"`
}

func (x *LightClientOptimisticUpdate) Reset() {
	*x = LightClientOptimisticUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beacon_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientOptimisticUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientOptimisticUpdate) ProtoMessage() {}

func (x *LightClientOptimisticUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_beacon_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientOptimisticUpdate.ProtoReflect.Descriptor instead.
func (*LightClientOptimisticUpdate) Descriptor() ([]byte, []int) {
	return file_beacon_block_proto_rawDescGZIP(), []int{19}
}

func (x *LightClientOptimisticUpdate) GetAttestedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.AttestedHeader
	}
	return nil
}

func (x *LightClientOptimisticUpdate) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *LightClientOptimisticUpdate) GetSignatureSlot() uint64 {
	if x != nil {
		return x.SignatureSlot
	}
	return 0
}

var File_beacon_block_proto protoreflect.FileDescriptor

var file_beacon_block_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x22, 0x6a,
	0x0a, 0x08, 0x45, 0x74, 0x68, 0x31, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x04, 0x52, 0x6f,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x1b, 0x0a, 0x08, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x6d, 0x0a,
	0x17, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x94, 0x01, 0x0a,
	0x08, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x07, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x31, 0x12, 0x43,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x32, 0x22, 0x67, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2a, 0x0a, 0x0f, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x85, 0x01, 0x0a,
	0x0b, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0f,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x15,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x4a, 0x0a,
	0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x29,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6b, 0x0a, 0x13, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74,
	0x12, 0x36, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x4e, 0x0a, 0x0d, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74,
	0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x27, 0x0a,
	0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x65, 0x65, 0x42, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x65, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x65, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xe0, 0x03, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x65, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1d,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a,
	0x0a, 0x50, 0x72, 0x65, 0x76, 0x52, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x12, 0x21,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65,
	0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x73, 0x12,
	0x1d, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xc8, 0x04, 0x0a, 0x13, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6f, 0x64,
	0x79, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x23, 0x0a, 0x0c, 0x52, 0x61,
	0x6e, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12,
	0x2f, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x31, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x74, 0x68,
	0x31, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x65, 0x74, 0x68, 0x31, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x12, 0x41, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x41, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x12,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a,
	0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x0e,
	0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x65,
	0x78, 0x69, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbe, 0x01,
	0x0a, 0x14, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x12, 0x17, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x42,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x72,
	0x0a, 0x1a, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x36, 0x0a, 0x05,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x4d, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x52, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x12,
	0x41, 0x0a, 0x1a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x22, 0x38, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x22, 0xb6, 0x03, 0x0a,
	0x11, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x4e, 0x65, 0x78, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x52, 0x13, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65,
	0x12, 0x3b, 0x0a, 0x17, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x1a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x46, 0x0a,
	0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x3e,
	0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0e,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beacon_block_proto_rawDescOnce sync.Once
	file_beacon_block_proto_rawDescData = file_beacon_block_proto_rawDesc
)

func file_beacon_block_proto_rawDescGZIP() []byte {
	file_beacon_block_proto_rawDescOnce.Do(func() {
		file_beacon_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_beacon_block_proto_rawDescData)
	})
	return file_beacon_block_proto_rawDescData
}

var file_beacon_block_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_beacon_block_proto_goTypes = []interface{}{
	(*Eth1Data)(nil),                    // 0: lightrpc.Eth1Data
	(*BeaconBlockHeader)(nil),           // 1: lightrpc.BeaconBlockHeader
	(*SignedBeaconBlockHeader)(nil),     // 2: lightrpc.SignedBeaconBlockHeader
	(*Slashing)(nil),                    // 3: lightrpc.Slashing
	(*AttestationData)(nil),             // 4: lightrpc.AttestationData
	(*Attestation)(nil),                 // 5: lightrpc.Attestation
	(*DepositData)(nil),                 // 6: lightrpc.DepositData
	(*Deposit)(nil),                     // 7: lightrpc.Deposit
	(*SignedVoluntaryExit)(nil),         // 8: lightrpc.SignedVoluntaryExit
	(*VoluntaryExit)(nil),               // 9: lightrpc.VoluntaryExit
	(*SyncAggregate)(nil),               // 10: lightrpc.SyncAggregate
	(*ExecutionPayload)(nil),            // 11: lightrpc.ExecutionPayload
	(*BeaconBodyBellatrix)(nil),         // 12: lightrpc.BeaconBodyBellatrix
	(*BeaconBlockBellatrix)(nil),        // 13: lightrpc.BeaconBlockBellatrix
	(*SignedBeaconBlockBellatrix)(nil),  // 14: lightrpc.SignedBeaconBlockBellatrix
	(*LightClientBootstrap)(nil),        // 15: lightrpc.LightClientBootstrap
	(*SyncCommittee)(nil),               // 16: lightrpc.SyncCommittee
	(*LightClientUpdate)(nil),           // 17: lightrpc.LightClientUpdate
	(*LightClientFinalityUpdate)(nil),   // 18: lightrpc.LightClientFinalityUpdate
	(*LightClientOptimisticUpdate)(nil), // 19: lightrpc.LightClientOptimisticUpdate
}
var file_beacon_block_proto_depIdxs = []int32{
	1,  // 0: lightrpc.SignedBeaconBlockHeader.Header:type_name -> lightrpc.BeaconBlockHeader
	2,  // 1: lightrpc.Slashing.Header1:type_name -> lightrpc.SignedBeaconBlockHeader
	2,  // 2: lightrpc.Slashing.Header2:type_name -> lightrpc.SignedBeaconBlockHeader
	4,  // 3: lightrpc.Attestation.Data:type_name -> lightrpc.AttestationData
	6,  // 4: lightrpc.Deposit.Data:type_name -> lightrpc.DepositData
	9,  // 5: lightrpc.SignedVoluntaryExit.VolunaryExit:type_name -> lightrpc.VoluntaryExit
	0,  // 6: lightrpc.BeaconBodyBellatrix.Eth1Data:type_name -> lightrpc.Eth1Data
	3,  // 7: lightrpc.BeaconBodyBellatrix.ProposerSlashings:type_name -> lightrpc.Slashing
	3,  // 8: lightrpc.BeaconBodyBellatrix.AttesterSlashings:type_name -> lightrpc.Slashing
	5,  // 9: lightrpc.BeaconBodyBellatrix.Attestations:type_name -> lightrpc.Attestation
	7,  // 10: lightrpc.BeaconBodyBellatrix.Deposits:type_name -> lightrpc.Deposit
	8,  // 11: lightrpc.BeaconBodyBellatrix.VoluntaryExits:type_name -> lightrpc.SignedVoluntaryExit
	10, // 12: lightrpc.BeaconBodyBellatrix.SyncAggregate:type_name -> lightrpc.SyncAggregate
	11, // 13: lightrpc.BeaconBodyBellatrix.ExecutionPayload:type_name -> lightrpc.ExecutionPayload
	12, // 14: lightrpc.BeaconBlockBellatrix.Body:type_name -> lightrpc.BeaconBodyBellatrix
	13, // 15: lightrpc.SignedBeaconBlockBellatrix.Block:type_name -> lightrpc.BeaconBlockBellatrix
	1,  // 16: lightrpc.LightClientBootstrap.Header:type_name -> lightrpc.BeaconBlockHeader
	16, // 17: lightrpc.LightClientBootstrap.CurrentSyncCommittee:type_name -> lightrpc.SyncCommittee
	1,  // 18: lightrpc.LightClientUpdate.AttestedHeader:type_name -> lightrpc.BeaconBlockHeader
	16, // 19: lightrpc.LightClientUpdate.NextSyncCommitee:type_name -> lightrpc.SyncCommittee
	1,  // 20: lightrpc.LightClientUpdate.FinalizedHeader:type_name -> lightrpc.BeaconBlockHeader
	10, // 21: lightrpc.LightClientUpdate.SyncAggregate:type_name -> lightrpc.SyncAggregate
	1,  // 22: lightrpc.LightClientFinalityUpdate.AttestedHeader:type_name -> lightrpc.BeaconBlockHeader
	1,  // 23: lightrpc.LightClientFinalityUpdate.FinalizedHeader:type_name -> lightrpc.BeaconBlockHeader
	10, // 24: lightrpc.LightClientFinalityUpdate.SyncAggregate:type_name -> lightrpc.SyncAggregate
	1,  // 25: lightrpc.LightClientOptimisticUpdate.AttestedHeader:type_name -> lightrpc.BeaconBlockHeader
	10, // 26: lightrpc.LightClientOptimisticUpdate.SyncAggregate:type_name -> lightrpc.SyncAggregate
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_beacon_block_proto_init() }
func file_beacon_block_proto_init() {
	if File_beacon_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beacon_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eth1Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slashing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedVoluntaryExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoluntaryExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBodyBellatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockBellatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlockBellatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientBootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCommittee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientFinalityUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beacon_block_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientOptimisticUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beacon_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beacon_block_proto_goTypes,
		DependencyIndexes: file_beacon_block_proto_depIdxs,
		MessageInfos:      file_beacon_block_proto_msgTypes,
	}.Build()
	File_beacon_block_proto = out.File
	file_beacon_block_proto_rawDesc = nil
	file_beacon_block_proto_goTypes = nil
	file_beacon_block_proto_depIdxs = nil
}
