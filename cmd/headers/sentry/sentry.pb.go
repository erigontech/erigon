// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: sentry.proto

package sentry

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OutboundMessageId int32

const (
	OutboundMessageId_GetBlockHeaders OutboundMessageId = 0
	OutboundMessageId_GetBlockBodies  OutboundMessageId = 1
	OutboundMessageId_GetNodeData     OutboundMessageId = 2
)

// Enum value maps for OutboundMessageId.
var (
	OutboundMessageId_name = map[int32]string{
		0: "GetBlockHeaders",
		1: "GetBlockBodies",
		2: "GetNodeData",
	}
	OutboundMessageId_value = map[string]int32{
		"GetBlockHeaders": 0,
		"GetBlockBodies":  1,
		"GetNodeData":     2,
	}
)

func (x OutboundMessageId) Enum() *OutboundMessageId {
	p := new(OutboundMessageId)
	*p = x
	return p
}

func (x OutboundMessageId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OutboundMessageId) Descriptor() protoreflect.EnumDescriptor {
	return file_sentry_proto_enumTypes[0].Descriptor()
}

func (OutboundMessageId) Type() protoreflect.EnumType {
	return &file_sentry_proto_enumTypes[0]
}

func (x OutboundMessageId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OutboundMessageId.Descriptor instead.
func (OutboundMessageId) EnumDescriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{0}
}

type PenaltyKind int32

const (
	PenaltyKind_Kick PenaltyKind = 0
)

// Enum value maps for PenaltyKind.
var (
	PenaltyKind_name = map[int32]string{
		0: "Kick",
	}
	PenaltyKind_value = map[string]int32{
		"Kick": 0,
	}
)

func (x PenaltyKind) Enum() *PenaltyKind {
	p := new(PenaltyKind)
	*p = x
	return p
}

func (x PenaltyKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PenaltyKind) Descriptor() protoreflect.EnumDescriptor {
	return file_sentry_proto_enumTypes[1].Descriptor()
}

func (PenaltyKind) Type() protoreflect.EnumType {
	return &file_sentry_proto_enumTypes[1]
}

func (x PenaltyKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PenaltyKind.Descriptor instead.
func (PenaltyKind) EnumDescriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{1}
}

type OutboundMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   OutboundMessageId `protobuf:"varint,1,opt,name=id,proto3,enum=sentry.OutboundMessageId" json:"id,omitempty"`
	Data []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OutboundMessageData) Reset() {
	*x = OutboundMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundMessageData) ProtoMessage() {}

func (x *OutboundMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundMessageData.ProtoReflect.Descriptor instead.
func (*OutboundMessageData) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{0}
}

func (x *OutboundMessageData) GetId() OutboundMessageId {
	if x != nil {
		return x.Id
	}
	return OutboundMessageId_GetBlockHeaders
}

func (x *OutboundMessageData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendMessageByMinBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *OutboundMessageData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	MinBlock uint64               `protobuf:"varint,2,opt,name=min_block,json=minBlock,proto3" json:"min_block,omitempty"`
}

func (x *SendMessageByMinBlockRequest) Reset() {
	*x = SendMessageByMinBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageByMinBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageByMinBlockRequest) ProtoMessage() {}

func (x *SendMessageByMinBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageByMinBlockRequest.ProtoReflect.Descriptor instead.
func (*SendMessageByMinBlockRequest) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageByMinBlockRequest) GetData() *OutboundMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageByMinBlockRequest) GetMinBlock() uint64 {
	if x != nil {
		return x.MinBlock
	}
	return 0
}

type SendMessageByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *OutboundMessageData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	PeerId []byte               `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *SendMessageByIdRequest) Reset() {
	*x = SendMessageByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageByIdRequest) ProtoMessage() {}

func (x *SendMessageByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageByIdRequest.ProtoReflect.Descriptor instead.
func (*SendMessageByIdRequest) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageByIdRequest) GetData() *OutboundMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageByIdRequest) GetPeerId() []byte {
	if x != nil {
		return x.PeerId
	}
	return nil
}

type SendMessageToRandomPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *OutboundMessageData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	MaxPeers uint64               `protobuf:"varint,2,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
}

func (x *SendMessageToRandomPeersRequest) Reset() {
	*x = SendMessageToRandomPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageToRandomPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageToRandomPeersRequest) ProtoMessage() {}

func (x *SendMessageToRandomPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageToRandomPeersRequest.ProtoReflect.Descriptor instead.
func (*SendMessageToRandomPeersRequest) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageToRandomPeersRequest) GetData() *OutboundMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageToRandomPeersRequest) GetMaxPeers() uint64 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

type SentPeers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers [][]byte `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *SentPeers) Reset() {
	*x = SentPeers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentPeers) ProtoMessage() {}

func (x *SentPeers) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentPeers.ProtoReflect.Descriptor instead.
func (*SentPeers) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{4}
}

func (x *SentPeers) GetPeers() [][]byte {
	if x != nil {
		return x.Peers
	}
	return nil
}

type PenalizePeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId  []byte      `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Penalty PenaltyKind `protobuf:"varint,2,opt,name=penalty,proto3,enum=sentry.PenaltyKind" json:"penalty,omitempty"`
}

func (x *PenalizePeerRequest) Reset() {
	*x = PenalizePeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PenalizePeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PenalizePeerRequest) ProtoMessage() {}

func (x *PenalizePeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PenalizePeerRequest.ProtoReflect.Descriptor instead.
func (*PenalizePeerRequest) Descriptor() ([]byte, []int) {
	return file_sentry_proto_rawDescGZIP(), []int{5}
}

func (x *PenalizePeerRequest) GetPeerId() []byte {
	if x != nil {
		return x.PeerId
	}
	return nil
}

func (x *PenalizePeerRequest) GetPenalty() PenaltyKind {
	if x != nil {
		return x.Penalty
	}
	return PenaltyKind_Kick
}

var File_sentry_proto protoreflect.FileDescriptor

var file_sentry_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x1c, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4d, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d,
	0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x62, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1f, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x09,
	0x53, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22,
	0x5d, 0x0a, 0x13, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x2a, 0x4d,
	0x0a, 0x11, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x10, 0x02, 0x2a, 0x17, 0x0a,
	0x0b, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4b, 0x69, 0x63, 0x6b, 0x10, 0x00, 0x32, 0x81, 0x03, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x43, 0x0a, 0x0c, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x65, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x24, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x73, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x56,
	0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x53, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f,
	0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x3b, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sentry_proto_rawDescOnce sync.Once
	file_sentry_proto_rawDescData = file_sentry_proto_rawDesc
)

func file_sentry_proto_rawDescGZIP() []byte {
	file_sentry_proto_rawDescOnce.Do(func() {
		file_sentry_proto_rawDescData = protoimpl.X.CompressGZIP(file_sentry_proto_rawDescData)
	})
	return file_sentry_proto_rawDescData
}

var file_sentry_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sentry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sentry_proto_goTypes = []interface{}{
	(OutboundMessageId)(0),                  // 0: sentry.OutboundMessageId
	(PenaltyKind)(0),                        // 1: sentry.PenaltyKind
	(*OutboundMessageData)(nil),             // 2: sentry.OutboundMessageData
	(*SendMessageByMinBlockRequest)(nil),    // 3: sentry.SendMessageByMinBlockRequest
	(*SendMessageByIdRequest)(nil),          // 4: sentry.SendMessageByIdRequest
	(*SendMessageToRandomPeersRequest)(nil), // 5: sentry.SendMessageToRandomPeersRequest
	(*SentPeers)(nil),                       // 6: sentry.SentPeers
	(*PenalizePeerRequest)(nil),             // 7: sentry.PenalizePeerRequest
	(*empty.Empty)(nil),                     // 8: google.protobuf.Empty
}
var file_sentry_proto_depIdxs = []int32{
	0,  // 0: sentry.OutboundMessageData.id:type_name -> sentry.OutboundMessageId
	2,  // 1: sentry.SendMessageByMinBlockRequest.data:type_name -> sentry.OutboundMessageData
	2,  // 2: sentry.SendMessageByIdRequest.data:type_name -> sentry.OutboundMessageData
	2,  // 3: sentry.SendMessageToRandomPeersRequest.data:type_name -> sentry.OutboundMessageData
	1,  // 4: sentry.PenalizePeerRequest.penalty:type_name -> sentry.PenaltyKind
	7,  // 5: sentry.Sentry.PenalizePeer:input_type -> sentry.PenalizePeerRequest
	3,  // 6: sentry.Sentry.SendMessageByMinBlock:input_type -> sentry.SendMessageByMinBlockRequest
	4,  // 7: sentry.Sentry.SendMessageById:input_type -> sentry.SendMessageByIdRequest
	5,  // 8: sentry.Sentry.SendMessageToRandomPeers:input_type -> sentry.SendMessageToRandomPeersRequest
	2,  // 9: sentry.Sentry.SendMessageToAll:input_type -> sentry.OutboundMessageData
	8,  // 10: sentry.Sentry.PenalizePeer:output_type -> google.protobuf.Empty
	6,  // 11: sentry.Sentry.SendMessageByMinBlock:output_type -> sentry.SentPeers
	6,  // 12: sentry.Sentry.SendMessageById:output_type -> sentry.SentPeers
	6,  // 13: sentry.Sentry.SendMessageToRandomPeers:output_type -> sentry.SentPeers
	6,  // 14: sentry.Sentry.SendMessageToAll:output_type -> sentry.SentPeers
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_sentry_proto_init() }
func file_sentry_proto_init() {
	if File_sentry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sentry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageByMinBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageToRandomPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentPeers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PenalizePeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sentry_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentry_proto_goTypes,
		DependencyIndexes: file_sentry_proto_depIdxs,
		EnumInfos:         file_sentry_proto_enumTypes,
		MessageInfos:      file_sentry_proto_msgTypes,
	}.Build()
	File_sentry_proto = out.File
	file_sentry_proto_rawDesc = nil
	file_sentry_proto_goTypes = nil
	file_sentry_proto_depIdxs = nil
}
