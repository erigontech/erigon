// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.1
// source: shutter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string        `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Message *anypb.Any    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Trace   *TraceContext `protobuf:"bytes,3,opt,name=trace,proto3,oneof" json:"trace,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_shutter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Envelope) GetMessage() *anypb.Any {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Envelope) GetTrace() *TraceContext {
	if x != nil {
		return x.Trace
	}
	return nil
}

type TraceContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    []byte `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId     []byte `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	TraceFlags []byte `protobuf:"bytes,3,opt,name=trace_flags,json=traceFlags,proto3" json:"trace_flags,omitempty"`
	TraceState string `protobuf:"bytes,4,opt,name=trace_state,json=traceState,proto3" json:"trace_state,omitempty"`
}

func (x *TraceContext) Reset() {
	*x = TraceContext{}
	mi := &file_shutter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceContext) ProtoMessage() {}

func (x *TraceContext) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceContext.ProtoReflect.Descriptor instead.
func (*TraceContext) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{1}
}

func (x *TraceContext) GetTraceId() []byte {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *TraceContext) GetSpanId() []byte {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *TraceContext) GetTraceFlags() []byte {
	if x != nil {
		return x.TraceFlags
	}
	return nil
}

func (x *TraceContext) GetTraceState() string {
	if x != nil {
		return x.TraceState
	}
	return ""
}

type DecryptionKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId uint64 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Eon        uint64 `protobuf:"varint,2,opt,name=eon,proto3" json:"eon,omitempty"`
	Keys       []*Key `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	// Types that are assignable to Extra:
	//
	//	*DecryptionKeys_Gnosis
	//	*DecryptionKeys_Optimism
	Extra isDecryptionKeys_Extra `protobuf_oneof:"extra"`
}

func (x *DecryptionKeys) Reset() {
	*x = DecryptionKeys{}
	mi := &file_shutter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptionKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptionKeys) ProtoMessage() {}

func (x *DecryptionKeys) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptionKeys.ProtoReflect.Descriptor instead.
func (*DecryptionKeys) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{2}
}

func (x *DecryptionKeys) GetInstanceId() uint64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *DecryptionKeys) GetEon() uint64 {
	if x != nil {
		return x.Eon
	}
	return 0
}

func (x *DecryptionKeys) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (m *DecryptionKeys) GetExtra() isDecryptionKeys_Extra {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (x *DecryptionKeys) GetGnosis() *GnosisDecryptionKeysExtra {
	if x, ok := x.GetExtra().(*DecryptionKeys_Gnosis); ok {
		return x.Gnosis
	}
	return nil
}

func (x *DecryptionKeys) GetOptimism() *OptimismDecryptionKeysExtra {
	if x, ok := x.GetExtra().(*DecryptionKeys_Optimism); ok {
		return x.Optimism
	}
	return nil
}

type isDecryptionKeys_Extra interface {
	isDecryptionKeys_Extra()
}

type DecryptionKeys_Gnosis struct {
	Gnosis *GnosisDecryptionKeysExtra `protobuf:"bytes,4,opt,name=gnosis,proto3,oneof"`
}

type DecryptionKeys_Optimism struct {
	Optimism *OptimismDecryptionKeysExtra `protobuf:"bytes,5,opt,name=optimism,proto3,oneof"`
}

func (*DecryptionKeys_Gnosis) isDecryptionKeys_Extra() {}

func (*DecryptionKeys_Optimism) isDecryptionKeys_Extra() {}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityPreimage []byte `protobuf:"bytes,1,opt,name=identity_preimage,json=identityPreimage,proto3" json:"identity_preimage,omitempty"`
	Key              []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_shutter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{3}
}

func (x *Key) GetIdentityPreimage() []byte {
	if x != nil {
		return x.IdentityPreimage
	}
	return nil
}

func (x *Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GnosisDecryptionKeysExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	TxPointer     uint64   `protobuf:"varint,2,opt,name=tx_pointer,json=txPointer,proto3" json:"tx_pointer,omitempty"`
	SignerIndices []uint64 `protobuf:"varint,3,rep,packed,name=signer_indices,json=signerIndices,proto3" json:"signer_indices,omitempty"`
	Signatures    [][]byte `protobuf:"bytes,4,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *GnosisDecryptionKeysExtra) Reset() {
	*x = GnosisDecryptionKeysExtra{}
	mi := &file_shutter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GnosisDecryptionKeysExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnosisDecryptionKeysExtra) ProtoMessage() {}

func (x *GnosisDecryptionKeysExtra) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnosisDecryptionKeysExtra.ProtoReflect.Descriptor instead.
func (*GnosisDecryptionKeysExtra) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{4}
}

func (x *GnosisDecryptionKeysExtra) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *GnosisDecryptionKeysExtra) GetTxPointer() uint64 {
	if x != nil {
		return x.TxPointer
	}
	return 0
}

func (x *GnosisDecryptionKeysExtra) GetSignerIndices() []uint64 {
	if x != nil {
		return x.SignerIndices
	}
	return nil
}

func (x *GnosisDecryptionKeysExtra) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type OptimismDecryptionKeysExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptimismDecryptionKeysExtra) Reset() {
	*x = OptimismDecryptionKeysExtra{}
	mi := &file_shutter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimismDecryptionKeysExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimismDecryptionKeysExtra) ProtoMessage() {}

func (x *OptimismDecryptionKeysExtra) ProtoReflect() protoreflect.Message {
	mi := &file_shutter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimismDecryptionKeysExtra.ProtoReflect.Descriptor instead.
func (*OptimismDecryptionKeysExtra) Descriptor() ([]byte, []int) {
	return file_shutter_proto_rawDescGZIP(), []int{5}
}

var File_shutter_proto protoreflect.FileDescriptor

var file_shutter_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x42, 0x07, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x44, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2b, 0x0a,
	0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x95, 0x01, 0x0a,
	0x19, 0x47, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shutter_proto_rawDescOnce sync.Once
	file_shutter_proto_rawDescData = file_shutter_proto_rawDesc
)

func file_shutter_proto_rawDescGZIP() []byte {
	file_shutter_proto_rawDescOnce.Do(func() {
		file_shutter_proto_rawDescData = protoimpl.X.CompressGZIP(file_shutter_proto_rawDescData)
	})
	return file_shutter_proto_rawDescData
}

var file_shutter_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_shutter_proto_goTypes = []any{
	(*Envelope)(nil),                    // 0: proto.Envelope
	(*TraceContext)(nil),                // 1: proto.TraceContext
	(*DecryptionKeys)(nil),              // 2: proto.DecryptionKeys
	(*Key)(nil),                         // 3: proto.Key
	(*GnosisDecryptionKeysExtra)(nil),   // 4: proto.GnosisDecryptionKeysExtra
	(*OptimismDecryptionKeysExtra)(nil), // 5: proto.OptimismDecryptionKeysExtra
	(*anypb.Any)(nil),                   // 6: google.protobuf.Any
}
var file_shutter_proto_depIdxs = []int32{
	6, // 0: proto.Envelope.message:type_name -> google.protobuf.Any
	1, // 1: proto.Envelope.trace:type_name -> proto.TraceContext
	3, // 2: proto.DecryptionKeys.keys:type_name -> proto.Key
	4, // 3: proto.DecryptionKeys.gnosis:type_name -> proto.GnosisDecryptionKeysExtra
	5, // 4: proto.DecryptionKeys.optimism:type_name -> proto.OptimismDecryptionKeysExtra
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_shutter_proto_init() }
func file_shutter_proto_init() {
	if File_shutter_proto != nil {
		return
	}
	file_shutter_proto_msgTypes[0].OneofWrappers = []any{}
	file_shutter_proto_msgTypes[2].OneofWrappers = []any{
		(*DecryptionKeys_Gnosis)(nil),
		(*DecryptionKeys_Optimism)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shutter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shutter_proto_goTypes,
		DependencyIndexes: file_shutter_proto_depIdxs,
		MessageInfos:      file_shutter_proto_msgTypes,
	}.Build()
	File_shutter_proto = out.File
	file_shutter_proto_rawDesc = nil
	file_shutter_proto_goTypes = nil
	file_shutter_proto_depIdxs = nil
}
